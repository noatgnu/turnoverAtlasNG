{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/accounts.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.interceptor.ts","./src/app/coverage-plot/coverage-plot.component.ts","./src/app/coverage-plot/coverage-plot.component.html","./src/app/floating-panels/floating-panels.component.ts","./src/app/floating-panels/floating-panels.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/merge-prompt/merge-prompt.component.ts","./src/app/merge-prompt/merge-prompt.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/protein-modelling-collection/protein-modelling-collection.component.ts","./src/app/protein-modelling-collection/protein-modelling-collection.component.html","./src/app/protein-modelling/protein-modelling.component.ts","./src/app/protein-modelling/protein-modelling.component.html","./src/app/protein-search/protein-search.component.ts","./src/app/protein-search/protein-search.component.html","./src/app/protein-tau-collection/protein-tau-collection.component.ts","./src/app/protein-tau-collection/protein-tau-collection.component.html","./src/app/protein-tau-distribution/protein-tau-distribution.component.ts","./src/app/protein-tau-distribution/protein-tau-distribution.component.html","./src/app/protein-view-peptide-collection/protein-view-peptide-collection.component.ts","./src/app/protein-view-peptide-collection/protein-view-peptide-collection.component.html","./src/app/protein-view-peptide-container/protein-view-peptide-container.component.ts","./src/app/protein-view-peptide-container/protein-view-peptide-container.component.html","./src/app/protein-view-scatter-h-vs-l/protein-view-scatter-h-vs-l.component.ts","./src/app/protein-view-scatter-h-vs-l/protein-view-scatter-h-vs-l.component.html","./src/app/protein-view-tissue-based/protein-view-tissue-based.component.ts","./src/app/protein-view-tissue-based/protein-view-tissue-based.component.html","./src/app/protein-view/protein-view.component.ts","./src/app/protein-view/protein-view.component.html","./src/app/scatter-time-plot/scatter-time-plot.component.ts","./src/app/scatter-time-plot/scatter-time-plot.component.html","./src/app/settings.ts","./src/app/toast.service.ts","./src/app/toast/toast.component.ts","./src/app/toast/toast.component.html","./src/app/variant-selector/variant-selector.component.ts","./src/app/variant-selector/variant-selector.component.html","./src/app/violin-time-plot/violin-time-plot.component.ts","./src/app/violin-time-plot/violin-time-plot.component.html","./src/app/web.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {environment} from \"../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountsService {\n  token: string = \"\"\n  loggedIn: boolean = false\n  baseUrl = environment.baseUrl\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string) {\n    this.loggedIn = false\n    const headers = new HttpHeaders()\n    headers.append('Content-Type', 'application/json')\n    headers.append('Accept', 'application/json')\n\n    return this.http.post(this.baseUrl + \"/api-token-auth/\", {username: username, password: password})\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ProteinViewComponent} from \"./protein-view/protein-view.component\";\nimport {HomeComponent} from \"./home/home.component\";\n\nconst routes: Routes = [\n  {path: 'protein-view/:proteinGroup', component: ProteinViewComponent},\n  {path: 'home', component: HomeComponent},\n  {path: '', redirectTo: '/home', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, bindToComponentInputs: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {WebService} from \"./web.service\";\nimport {ToastService} from \"./toast.service\";\nimport {forkJoin} from \"rxjs\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private web: WebService, private toastService: ToastService) {\n    this.initialize()\n    this.web.initializeModelParameters.asObservable().subscribe(data => {\n      this.initialize()\n    })\n  }\n\n  initialize() {\n    forkJoin([ this.web.getSampleMetadata(), this.web.getAllModelParameters()]).subscribe(\n      (data) => {\n        this.toastService.show('Initialization', 'Loading sample metadata and model parameters...')\n        for (const s of data[0]) {\n          this.web.settings.sampleMap[s.Sample_Name] = s\n        }\n        this.web.modelParameters = data[1]\n      }, (error) => {\n        this.toastService.show('Initialization', 'Error loading sample metadata and model parameters. Please log in.')\n      }\n    )\n  }\n}\n","<app-toast></app-toast>\n<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n\nimport * as PlotlyJS from 'plotly.js-dist-min';\nimport { PlotlyModule } from 'angular-plotly.js';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport { ProteinSearchComponent } from './protein-search/protein-search.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { ProteinViewComponent } from './protein-view/protein-view.component';\nimport {provideRouter} from \"@angular/router\";\nimport { ScatterTimePlotComponent } from './scatter-time-plot/scatter-time-plot.component';\nimport { ProteinViewPeptideContainerComponent } from './protein-view-peptide-container/protein-view-peptide-container.component';\nimport { ProteinViewScatterHVsLComponent } from './protein-view-scatter-h-vs-l/protein-view-scatter-h-vs-l.component';\nimport { ProteinViewTissueBasedComponent } from './protein-view-tissue-based/protein-view-tissue-based.component';\nimport { ProteinViewPeptideCollectionComponent } from './protein-view-peptide-collection/protein-view-peptide-collection.component';\nimport { ViolinTimePlotComponent } from './violin-time-plot/violin-time-plot.component';\nimport { ProteinModellingCollectionComponent } from './protein-modelling-collection/protein-modelling-collection.component';\nimport { ProteinModellingComponent } from './protein-modelling/protein-modelling.component';\nimport { ProteinTauDistributionComponent } from './protein-tau-distribution/protein-tau-distribution.component';\nimport { ProteinTauCollectionComponent } from './protein-tau-collection/protein-tau-collection.component';\nimport { ToastComponent } from './toast/toast.component';\nimport { FloatingPanelsComponent } from './floating-panels/floating-panels.component';\nimport {NgxColorsModule} from \"ngx-colors\";\nimport { MergePromptComponent } from './merge-prompt/merge-prompt.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { CoveragePlotComponent } from './coverage-plot/coverage-plot.component';\nimport { VariantSelectorComponent } from './variant-selector/variant-selector.component';\nimport { HomeComponent } from './home/home.component';\nimport {AuthInterceptor} from \"./auth.interceptor\";\n\nPlotlyModule.plotlyjs = PlotlyJS;\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProteinSearchComponent,\n    NavbarComponent,\n    ProteinViewComponent,\n    ScatterTimePlotComponent,\n    ProteinViewPeptideContainerComponent,\n    ProteinViewScatterHVsLComponent,\n    ProteinViewTissueBasedComponent,\n    ProteinViewPeptideCollectionComponent,\n    ViolinTimePlotComponent,\n    ProteinModellingCollectionComponent,\n    ProteinModellingComponent,\n    ProteinTauDistributionComponent,\n    ProteinTauCollectionComponent,\n    ToastComponent,\n    FloatingPanelsComponent,\n    MergePromptComponent,\n    CoveragePlotComponent,\n    VariantSelectorComponent,\n    HomeComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        PlotlyModule, HttpClientModule, FormsModule, ReactiveFormsModule, NgxColorsModule, BrowserAnimationsModule\n    ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {AccountsService} from \"./accounts.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private accounts: AccountsService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    // add authorization header with token if available from accounts service\n    if (this.accounts.token !== \"\" && !request.url.endsWith(\"/api-token-auth/\")) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Token ${this.accounts.token}`\n        }\n      });\n    }\n    console.log(request)\n    return next.handle(request);\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {SequenceCoverage} from \"../sequence-coverage\";\nimport {WebService} from \"../web.service\";\nimport {DataFrame, IDataFrame} from \"data-forge\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-coverage-plot',\n  templateUrl: './coverage-plot.component.html',\n  styleUrls: ['./coverage-plot.component.scss']\n})\nexport class CoveragePlotComponent {\n  private _coverageData: SequenceCoverage|undefined = undefined\n  df: IDataFrame<{id: string, Precursor_Id: string, Tissue: string, Engine: string, tau_POI: number, Stripped_Sequence: string}> = new DataFrame()\n  tissues: string[] = []\n  displayDF: IDataFrame<{id: string, Precursor_Id: string, Tissue: string, Engine: string, tau_POI: number, Stripped_Sequence: string}> = new DataFrame()\n  engines: string[] = []\n  iscollapse: boolean = true\n  revision: number = 0\n  @Input() set coverageData(value: SequenceCoverage) {\n\n    this._coverageData = value\n    this.df = new DataFrame(Object.values(value.turnover_data))\n    this.tissues = this.df.getSeries(\"Tissue\").distinct().toArray()\n\n    this.form.controls['tissues'].setValue(this.tissues[0])\n    this.updateDisplay()\n  }\n\n  graphData: any[] = []\n  graphLayout: any = {\n    title: \"\",\n    autosize: true,\n    width: 1200,\n    hovermode: false,\n    xaxis: {\n      title: \"Position\",\n      range: [0, 100],\n      showticklabels: false,\n      showgrid: false,\n      zeroline: false,\n      visible: false,\n    },\n    yaxis: {\n      showticklabels: false,\n      range: [0, 100],\n      type: \"category\",\n      fixedrange: true,\n      showgrid: false,\n      zeroline: false,\n      visible: false,\n    },\n    shapes: [],\n  }\n  graphLayoutMap: any = {\n\n  }\n  graphDataMap: any = {\n\n  }\n\n  form: FormGroup = this.fb.group({\n    tissues: new FormControl<string>(\"\", Validators.required),\n    valid_tau: new FormControl<boolean>(true),\n    selected_only: new FormControl<boolean>(false),\n  })\n\n  get coverageData(): SequenceCoverage {\n    return this._coverageData as SequenceCoverage\n  }\n\n  constructor(private web: WebService, private fb: FormBuilder) {\n    this.form.valueChanges.subscribe((data) => {\n      this.updateDisplay()\n    })\n    this.web.redrawSubject.subscribe(() => {\n      this.updateDisplay()\n    })\n  }\n\n  drawCoveragePlot() {\n    this.graphLayoutMap = {}\n    this.graphDataMap = {}\n    if (this.coverageData && this.displayDF.count() > 0) {\n      this.displayDF.groupBy((row) => {\n        return row.Engine\n      }).forEach((group) => {\n        const graphData: any[] = []\n        const graphLayout = JSON.parse(JSON.stringify(this.graphLayout))\n\n        graphLayout.title = group.first().Engine\n        const heightMap: any = {}\n        const dataMap: any = {}\n        const lineShapeFromData: any = {\n          type: \"line\",\n          x0: 1,\n          y0: 0,\n          x1: this.coverageData.protein_sequence.length,\n          y1: 0,\n          line: {\n            color: \"black\",\n            width: 1,\n          },\n        }\n        graphLayout.shapes.push(lineShapeFromData)\n        const df = group.orderByDescending((row) => {\n          return row.Stripped_Sequence.length\n        }).bake()\n\n        df.forEach((row) => {\n          let previousHeight = 0\n          for (const i in this.coverageData.coverage) {\n            // @ts-ignore\n            if (this.coverageData.coverage[i].includes(row.id)) {\n              if (!(i in heightMap)) {\n                heightMap[i] = {highest: 0}\n              }\n              if (!(row.id in heightMap[i])) {\n                heightMap[i].highest += 1\n                if (previousHeight ==0) {\n                  previousHeight = heightMap[i].highest\n                } else {\n                  heightMap[i].highest = previousHeight\n                }\n              }\n\n              heightMap[i][row.id] = heightMap[i].highest\n              if (!dataMap[row.id]) {\n                dataMap[row.id] = {\n                  x: [],\n                  y: [],\n                }\n              }\n              dataMap[row.id].x.push(parseInt(i)+1)\n              dataMap[row.id].y.push(heightMap[i][row.id])\n            }\n          }\n        })\n        graphLayout.xaxis.range = [1, this.coverageData.protein_sequence.length]\n\n        let highest = 0\n        for (const i in dataMap) {\n          const x0 = dataMap[i].x[0]\n          const x1 = dataMap[i].x[dataMap[i].x.length-1]\n          const y0 = dataMap[i].y[0]\n          const y1 = dataMap[i].y[dataMap[i].y.length-1]\n          const lineShape: any = {\n            type: \"line\",\n            x0: x0,\n            y0: y0,\n            x1: x1,\n            y1: y1,\n            line: {\n              color: \"rgb(101,101,101)\",\n              width: 4,\n            },\n          }\n          if (this.web.settings.searchMap[i]) {\n            lineShape.line.color = this.web.settings.colorMap[this.web.settings.searchMap[i][this.web.settings.searchMap[i].length -1]].slice()\n          }\n          if (y1 > highest) {\n            highest = y1\n          }\n\n          graphLayout.shapes.push(lineShape)\n        }\n        graphLayout.yaxis.range = [0, highest]\n        this.graphLayoutMap[group.first().Engine] = graphLayout\n        this.graphDataMap[group.first().Engine] = []\n      })\n      this.revision += 1\n    }\n    console.log(this.graphDataMap)\n  }\n\n  updateDisplay() {\n    this.displayDF = this.df.where((row) => {\n      return row.Tissue === this.form.controls['tissues'].value\n    })\n    if (this.form.controls['valid_tau'].value) {\n      this.displayDF = this.displayDF.where((row) => {\n        return row.tau_POI !== null\n      })\n    }\n    if (this.form.controls['selected_only'].value) {\n      this.displayDF = this.displayDF.where((row) => {\n          return this.web.settings.selectedMSDataID.includes(row.id)\n      })\n    }\n    this.displayDF = this.displayDF.bake()\n    this.engines = this.displayDF.getSeries(\"Engine\").distinct().toArray()\n\n    this.drawCoveragePlot()\n  }\n}\n","<div class=\"accordion\">\n    <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\">\n            <button [ngClass]=\"{'accordion-button': true, 'collapsed': iscollapse}\" type=\"button\" (click)=\"iscollapse=!iscollapse\">\n                Coverage plot\n            </button>\n        </h2>\n        <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"iscollapse\">\n            <div class=\"accordion-body\">\n                <form [formGroup]=\"form\" class=\"d-flex flex-row gap-1\">\n                    <div class=\"form-group\">\n                        <label for=\"tissues\">\n                            Tissue selection\n                        </label>\n                        <select class=\"form-control\" id=\"tissues\" formControlName=\"tissues\">\n                            <option *ngFor=\"let tissue of tissues\" [value]=\"tissue\">{{tissue}}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"valid_tau\" formControlName=\"valid_tau\">\n                        <label class=\"form-check-label\" for=\"valid_tau\">\n                            Valid tau only\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"selected_only\" formControlName=\"selected_only\">\n                        <label class=\"form-check-label\" for=\"selected_only\">\n                            Selected peptide only\n                        </label>\n                    </div>\n                </form>\n                <plotly-plot [revision]=\"revision\" *ngFor=\"let e of engines\" [data]=\"graphDataMap[e]\" [layout]=\"graphLayoutMap[e]\"></plotly-plot>\n\n            </div>\n        </div>\n    </div>\n</div>\n\n","import {Component, Input} from '@angular/core';\nimport {WebService} from \"../web.service\";\nimport {FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {MergePromptComponent} from \"../merge-prompt/merge-prompt.component\";\nimport {debounceTime, distinctUntilChanged, map, Observable, OperatorFunction} from \"rxjs\";\nimport {DataFrame, IDataFrame} from \"data-forge\";\nimport {MSData} from \"../msdata\";\n\n@Component({\n  selector: 'app-floating-panels',\n  templateUrl: './floating-panels.component.html',\n  styleUrls: ['./floating-panels.component.scss']\n})\nexport class FloatingPanelsComponent {\n  precursorList: string[] = []\n  sequenceList: string[] = []\n\n  private _filteredDF: IDataFrame<number, MSData> = new DataFrame()\n  private displayDF: IDataFrame<number, MSData> = new DataFrame()\n  @Input() set filteredDF(value: IDataFrame<number, MSData>) {\n    this._filteredDF = value\n    this.displayDF = value\n    if (this.validTau) {\n        this.displayDF = this.displayDF.where((row) => {\n            return row[\"tau_POI\"] !== null\n        })\n    }\n    this.precursorList = this.displayDF.getSeries(\"Precursor_Id\").distinct().toArray()\n    this.sequenceList = this.displayDF.getSeries(\"Stripped_Sequence\").distinct().toArray()\n  }\n\n  get filteredDF(): IDataFrame<number, MSData> {\n    return this._filteredDF\n  }\n  searchBy: \"Precursor_Id\"| \"Stripped_Sequence\" = \"Precursor_Id\"\n  panelOpenState = false;\n  selected: string[] = []\n  validTau: boolean = true\n\n\n  togglePanels() {\n    this.panelOpenState = !this.panelOpenState;\n  }\n\n  legends = Object.keys(this.web.settings.colorMap)\n  colorMap = Object.assign({}, this.web.settings.colorMap)\n\n  typeaheadModel: string = \"\"\n  search: OperatorFunction<string, readonly string[]> = (text$: Observable<string>) =>\n      text$.pipe(\n          debounceTime(200),\n          distinctUntilChanged(),\n          map(term => {\n            if (term.length < 1) {\n              return []\n            } else {\n              if (this.searchBy === \"Precursor_Id\") {\n                return this.precursorList.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10)\n              } else {\n                return this.sequenceList.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10)\n              }\n            }}),\n          )\n\n  form: FormGroup<any>= this.fb.group({\n\n  })\n\n  constructor(private web: WebService, private fb: FormBuilder, private modal: NgbModal) {\n    this.web.selectionSubject.subscribe(() => {\n      this.legends = Object.keys(this.web.settings.colorMap)\n      this.colorMap = Object.assign({}, this.web.settings.colorMap)\n      const form = this.fb.group({})\n      for (const l of this.legends) {\n        form.addControl(l, new FormControl(false))\n      }\n      this.form = form\n    })\n  }\n\n  updateColorMap() {\n    for (const i of this.legends) {\n      this.web.settings.colorMap[i] = this.colorMap[i]\n    }\n    this.web.redrawSubject.next(true)\n  }\n\n  updateSelected(e: string) {\n    if (this.selected.includes(e)) {\n      if (this.form.value[e] === true) {\n        this.selected.splice(this.selected.indexOf(e), 1)\n      }\n    } else {\n      this.selected.push(e)\n    }\n  }\n\n  mergeSelected() {\n    if (this.selected.length > 1) {\n      const ref = this.modal.open(MergePromptComponent)\n      ref.closed.subscribe((result) => {\n        this.web.mergeSearchOperations(this.selected, result.color, result.name, result.remove)\n        this.web.redrawSubject.next(true)\n        this.web.selectionSubject.next(true)\n      })\n    }\n  }\n\n  removeSelected() {\n    for (const s of this.selected) {\n      this.web.removeSearchOperation(s)\n    }\n    this.form.reset()\n    this.selected = []\n    this.web.redrawSubject.next(true)\n    this.legends = Object.keys(this.web.settings.colorMap)\n  }\n\n  matchSearch() {\n    const ids: number[] = this.filteredDF.where((row) => {\n      return row[this.searchBy] === this.typeaheadModel\n    }).bake().getSeries(\"id\").toArray().map((id) => {\n      return parseInt(id)\n    })\n    console.log(ids)\n    if (ids.length > 0) {\n      ids.forEach((id) => {\n        if (!this.web.settings.searchMap[id]) {\n          this.web.settings.searchMap[id] = []\n        }\n        if (!this.web.settings.searchMap[id].includes(this.typeaheadModel)) {\n          this.web.settings.searchMap[id].push(this.typeaheadModel)\n        }\n      })\n      this.web.setOperationColor(this.typeaheadModel)\n      this.web.settings.searchOperations.push(this.typeaheadModel)\n      this.web.selectionHandler(ids)\n    }\n  }\n\n  updateParams() {\n    if (this.validTau) {\n      this.displayDF = this.filteredDF.where((row) => {\n        return row[\"tau_POI\"] !== null\n      })\n    }\n    this.precursorList = this.displayDF.getSeries(\"Precursor_Id\").distinct().toArray()\n    this.sequenceList = this.displayDF.getSeries(\"Stripped_Sequence\").distinct().toArray()\n  }\n}\n","<div *ngIf=\"panelOpenState\" style=\"position: fixed; z-index: 1030; bottom: 110px; left: 10px;\">\n\n</div>\n\n<div *ngIf=\"panelOpenState\" style=\"position: fixed; z-index: 1030; bottom: 110px; left: 10px;\" class=\"d-flex flex-column gap-1\">\n    <div class=\"card\" style=\"min-width: 200px; max-width: 300px; min-height: 250px\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">Search sequence</h5>\n            <form>\n                <div class=\"form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"validTau\" (change)=\"updateParams()\" [ngModelOptions]=\"{standalone: true}\">\n                    <label class=\"form-check-label\">Valid TAU only</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Search term\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"typeaheadModel\" [ngbTypeahead]=\"search\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Search by</label>\n                    <select class=\"form-control\" [(ngModel)]=\"searchBy\" [ngModelOptions]=\"{standalone: true}\">\n                        <option value=\"Precursor_Id\">\n                            Precursor_Id\n                        </option>\n                        <option value=\"Stripped_Sequence\">\n                            Stripped_Sequence\n                        </option>\n                    </select>\n                </div>\n            </form>\n        </div>\n        <div class=\"card-footer\">\n            <button class=\"btn btn-sm btn-primary\" (click)=\"matchSearch()\">Submit</button>\n        </div>\n    </div>\n\n    <div class=\"card\" style=\"min-width: 200px; max-width: 300px; min-height: 400px; max-height: 400px\" *ngIf=\"legends.length > 0\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">Selected Data</h5>\n            <form [formGroup]=\"form\">\n                <div class=\"flex-column gap-1 overflow-auto\" style=\"height:250px\">\n                    <div *ngFor=\"let l of legends\">\n                        <div class=\"d-flex align-items-center gap-1 p-2\">\n                            <div class=\"form-check\">\n                                <input type=\"checkbox\" class=\"form-check-input\" (change)=\"updateSelected(l)\" [formControlName]=\"l\">\n                            </div>\n                            <ngx-colors ngx-colors-trigger [(ngModel)]=\"colorMap[l]\" [ngModelOptions]=\"{standalone: true}\"></ngx-colors>\n                            <div>{{l}}</div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n\n        </div>\n        <div class=\"card-footer\">\n            <div class=\"d-flex gap-1\">\n                <button class=\"btn btn-sm btn-primary\" (click)=\"updateColorMap()\">Update</button>\n                <button class=\"btn btn-sm btn-secondary\" (click)=\"mergeSelected()\">Merge ({{selected.length}})</button>\n                <button class=\"btn btn-sm btn-warning\" (click)=\"removeSelected()\">Remove ({{selected.length}})</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"float-start\" style=\"position: fixed; z-index: 1030; bottom: 50px; left: 10px\">\n    <div class=\"d-flex\">\n        <div class=\"p-2\">\n            <button class=\"btn btn-sm btn-outline-info\" (click)=\"togglePanels()\">\n                <span class=\"bi bi-database\"></span>\n            </button>\n        </div>\n\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport {AccountsService} from \"../accounts.service\";\nimport {FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport {ToastService} from \"../toast.service\";\nimport {WebService} from \"../web.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  form = this.fb.group({\n    username: new FormControl<string>('', Validators.required),\n    password: new FormControl<string>('', Validators.required)\n  })\n  constructor(public accounts: AccountsService, private fb: FormBuilder, private toast: ToastService, private web: WebService) {\n\n  }\n\n  loginHandler() {\n    if (this.form.valid) {\n      if (this.form.value.username && this.form.value.password) {\n        this.toast.show(\"User information\", \"Logging in...\")\n        this.accounts.login(this.form.value[\"username\"], this.form.value[\"password\"]).subscribe((data: any) => {\n          this.accounts.token = data.token\n          this.accounts.loggedIn = true\n          this.toast.show(\"User information\", \"Logged in successfully\")\n          this.web.initializeModelParameters.next(true)\n        })\n      }\n    }\n\n  }\n}\n","<div class=\"flex justify-content-center align-items-center mt-5\" *ngIf=\"accounts.token === ''\">\n  <div class=\"card login-box\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Login</h5>\n      <form [formGroup]=\"form\" (ngSubmit)=\"loginHandler()\">\n        <div class=\"form-group\">\n          <label for=\"username\">\n            Username\n          </label>\n          <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">\n            Password\n          </label>\n          <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\">\n        </div>\n      </form>\n    </div>\n    <div class=\"card-footer\">\n      <button class=\"btn btn-primary\" (click)=\"loginHandler()\">Login</button>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-merge-prompt',\n  templateUrl: './merge-prompt.component.html',\n  styleUrls: ['./merge-prompt.component.scss']\n})\nexport class MergePromptComponent {\n  form = this.fb.group({\n    name: new FormControl('', Validators.required),\n    color: new FormControl('#000000', Validators.required),\n    remove: new FormControl(false)\n  })\n  constructor(private fb: FormBuilder, public modal: NgbActiveModal) {\n  }\n\n  save() {\n    this.modal.close(this.form.value)\n  }\n  cancel() {\n    this.modal.dismiss()\n  }\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">Selection assignment</h5>\n</div>\n<div class=\"modal-body\">\n    <form [formGroup]=\"form\">\n        <div class=\"d-flex align-content-center gap-1\">\n            <div>\n                <ngx-colors ngx-colors-trigger formControlName=\"color\"></ngx-colors>\n            </div>\n            <div class=\"form-group\">\n                <input id=\"selection-title\" type=\"text\" class=\"form-control\" formControlName=\"name\" placeholder=\"Selection title\">\n            </div>\n            <div class=\"form-check\">\n                <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"remove\">\n                <label class=\"form-check-label\">Remove original selection</label>\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"save()\">Save</button>\n</div>\n","import { Component } from '@angular/core';\nimport {catchError, debounceTime, distinctUntilChanged, Observable, of, OperatorFunction, switchMap, tap} from \"rxjs\";\nimport {WebService} from \"../web.service\";\nimport {Router} from \"@angular/router\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {VariantSelectorComponent} from \"../variant-selector/variant-selector.component\";\nimport {ToastService} from \"../toast.service\";\nimport {AccountsService} from \"../accounts.service\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n  proteinSearchModel: string = \"\"\n  searching = false\n  searchFailed = false\n  //typeahead function for search model\n  search: OperatorFunction<string, readonly string[]> = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      tap(() => this.searching = true),\n      switchMap((term: string) =>\n          this.web.typeAheadSearchTerm(term, this.searchType).pipe(\n        tap(() => this.searchFailed = false),\n        catchError(() => {\n          this.searchFailed = true;\n          return of([]);\n          }),\n        ),\n      ),\n      tap(() => this.searching = false)\n    )\n\n  searchType = \"Protein_Group\"\n\n  resultFormatter = (x: string, term: string) => {\n    //truncate long protein names to maximum 10 characters that match the search term\n    if (x.length > 10) {\n      const position = x.toLowerCase().indexOf(term.toLowerCase())\n      // get 5 characters before and after the search term\n      const start = Math.max(0, position - 5)\n      const end = Math.min(x.length, position + 5)\n      const result = x.substring(start, end)\n      return result\n    } else {\n      return x\n    }\n  }\n\n  constructor(private web: WebService, private router: Router, private modal: NgbModal, public toast: ToastService, public accounts: AccountsService) {\n  }\n\n  searchData() {\n    if (this.searchType === \"Protein_Group\") {\n      this.router.navigate(['protein-view', this.proteinSearchModel]).then(r => console.log(r))\n    } else {\n      this.web.getExactAccFromGene(this.proteinSearchModel).subscribe((data: string[]) => {\n        console.log(data)\n        const ref = this.modal.open(VariantSelectorComponent)\n        ref.componentInstance.data = data\n        ref.closed.subscribe((result: string) => {\n          console.log(result)\n            if (result) {\n                this.router.navigate(['protein-view', result]).then(r => console.log(r))\n            }\n        })\n      })\n    }\n\n  }\n\n  save() {\n    this.web.settings.download()\n  }\n\n  loadSettingFromFile(event: any) {\n    if (\"target\" in event && \"files\" in event.target && event.target.files.length > 0) {\n      const file = event.target.files[0]\n        const reader = new FileReader()\n        reader.onload = (e) => {\n          if (e.target) {\n            const target = e.target as FileReader\n            this.web.settings.import(JSON.parse(target.result as string))\n            this.web.restoreSubject.next(true)\n          }\n        }\n        reader.readAsText(file)\n    }\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light fixed-top d-flex flex-wrap\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">\n      Turnover Atlas\n    </a>\n    <div class=\"d-flex flex-row gap-1\">\n      <form class=\"d-flex\" (ngSubmit)=\"searchData()\" style=\"gap: 20px\" *ngIf=\"accounts.loggedIn\">\n        <input\n                [resultTemplate]=\"rt\"\n                [editable]=\"false\"\n                placement=\"left-top\"\n                [class.is-invalid]=\"searchFailed\"\n                [(ngModel)]=\"proteinSearchModel\"\n                [ngbTypeahead]=\"search\"\n                [ngModelOptions]=\"{standalone: true}\"\n                class=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search Term\"\n                aria-label=\"Search\">\n        <div class=\"form-group\">\n          <select [(ngModel)]=\"searchType\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"selectionType\" style=\"width: 150px\">\n            <option value=\"Protein_Group\">\n              Protein Group\n            </option>\n            <option value=\"Genes\">\n              Gene\n            </option>\n          </select>\n        </div>\n        <button class=\"btn btn-outline-dark\" type=\"submit\"><i class=\"bi bi-search\"></i></button>\n      </form>\n      <div>\n        <div display=\"dynamic\" ngbDropdown class=\"d-inline-block\">\n          <button class=\"btn btn-outline-primary ml-2\" id=\"dropdownSession\" ngbDropdownToggle>\n            Session\n          </button>\n          <div ngbDropdownMenu aria-labelledby=\"dropdownSession\">\n            <button ngbDropdownItem (click)=\"save()\">Session Save</button>\n            <button ngbDropdownItem (click)=\"loadSettings.click()\">Session Load</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</nav>\n\n<input type=\"file\" id=\"file\" (change)=\"loadSettingFromFile($event)\" style=\"display: none\" accept=\".json\" #loadSettings>\n\n<ng-template #rt let-r=\"result\" let-t=\"term\">\n  <ngb-highlight [result]=\"resultFormatter(r, t)\" [term]=\"t\"></ngb-highlight> - ({{r.split(\";\").length}} Shared)\n</ng-template>\n","import {Component, Input} from '@angular/core';\nimport {IDataFrame, ISeries, Series} from \"data-forge\";\nimport {Modelling} from \"../modelling-data\";\nimport {MSData} from \"../msdata\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-protein-modelling-collection',\n  templateUrl: './protein-modelling-collection.component.html',\n  styleUrls: ['./protein-modelling-collection.component.scss']\n})\nexport class ProteinModellingCollectionComponent {\n  private _data: ISeries<number, IDataFrame<number, MSData>> = new Series()\n  @Input() set data(value: ISeries<number, IDataFrame<number, MSData>>) {\n    this._data = value\n    const tissues: string[] = []\n    this._data.forEach((df) => {\n      tissues.push(df.first().Tissue)\n    })\n    this.tissues = tissues\n    this.form.controls['selectedTissues'].setValue(this.tissues.slice(0,1))\n    this.updateGroupData()\n  }\n\n  get data(): ISeries<number, IDataFrame<number, MSData>> {\n    return this._data\n  }\n\n  tissues: string[] = []\n\n  selectedTissues: string[] = []\n\n  iscollapse: boolean = true\n  groupData: ISeries<number, IDataFrame<number, MSData>> = new Series()\n  form = this.fb.group({\n    selectedTissues: new FormControl<string[]>([], Validators.required),\n    hideNotSelected: new FormControl<boolean>(false)\n  })\n\n  hideNotSelected: boolean = false\n  constructor(private fb: FormBuilder) {\n    this.form.controls.selectedTissues.valueChanges.subscribe((data) => {\n        this.updateGroupData()\n    })\n    this.form.controls.hideNotSelected.valueChanges.subscribe((data) => {\n      if (data !== null) {\n        this.hideNotSelected = data\n      }\n    })\n  }\n\n  updateGroupData() {\n    if (this.form.controls.selectedTissues.value) {\n      this.selectedTissues = this.form.controls.selectedTissues.value\n      this.groupData = this.data.where((df) => {\n        return this.selectedTissues.includes(df.first().Tissue)\n      }).bake()\n    }\n  }\n\n\n}\n","<div class=\"accordion\">\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\">\n      <button [ngClass]=\"{'accordion-button': true, 'collapsed': iscollapse}\" type=\"button\" (click)=\"iscollapse=!iscollapse\">\n        Model overview\n      </button>\n    </h2>\n    <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"iscollapse\">\n      <div class=\"accordion-body\">\n        <form [formGroup]=\"form\">\n          <div class=\"flex-row gap-5\">\n            <div class=\"form-group\" style=\"width: 300px; padding: 20px\">\n              <label for=\"tissues\">Select tissues:</label>\n              <select id=\"tissues\" class=\"form-control\" formControlName=\"selectedTissues\" multiple>\n                <option *ngFor=\"let t of tissues\" [value]=\"t\">\n                  {{t}}\n                </option>\n              </select>\n            </div>\n            <div class=\"form-check\">\n              <input class=\"form-check-input\" formControlName=\"hideNotSelected\" type=\"checkbox\" id=\"hideNotSelected\">\n              <label class=\"form-check-label\" for=\"hideNotSelected\">Make not selected model transparent</label>\n            </div>\n          </div>\n\n        </form>\n\n        <div *ngIf=\"selectedTissues.length > 0 && !iscollapse\">\n          <div *ngFor=\"let t of groupData\" style=\"padding: 20px\">\n            <app-protein-modelling [data]=\"t\" [hideNotSelected]=\"hideNotSelected\"></app-protein-modelling>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {DataFrame, IDataFrame} from \"data-forge\";\nimport {Modelling} from \"../modelling-data\";\nimport {WebService} from \"../web.service\";\nimport {MSData} from \"../msdata\";\nimport {ToastService} from \"../toast.service\";\n\n@Component({\n  selector: 'app-protein-modelling',\n  templateUrl: './protein-modelling.component.html',\n  styleUrls: ['./protein-modelling.component.scss']\n})\nexport class ProteinModellingComponent {\n  private _data: IDataFrame<number, MSData> = new DataFrame()\n  private _hideNotSelected: boolean = false\n  revision: number = 0\n  @Input()  set hideNotSelected(value: boolean) {\n    this._hideNotSelected = value\n    this.drawModel()\n  }\n    get hideNotSelected(): boolean {\n        return this._hideNotSelected\n    }\n  @Input() set data(value: IDataFrame<number, MSData>) {\n    this._data = value\n    this.drawModel()\n  }\n  get data(): IDataFrame<number, MSData> {\n    return this._data\n  }\n  graphDataMap: any = {}\n  graphLayoutMap: any = {}\n\n  graphData: any[] = []\n  graphLayout: any = {\n    title: \"\",\n    width: 400,\n    xaxis: {\n      title: \"Time (days)\",\n      range: [0, 50]\n    },\n    yaxis: {\n      title: \"H + H/L\",\n    },\n    annotations: [],\n    font: {\n      family: \"Arial\",\n      color: \"black\"\n    }\n  }\n\n  engines: string[] = []\n\n  constructor(private web: WebService, private toasts: ToastService) {\n    this.web.redrawSubject.subscribe(() => {\n      this.drawModel()\n    })\n  }\n\n  drawModel() {\n    const graphDataMap: any = {}\n    const graphLayoutMap: any = {}\n    console.log(this.data)\n    this.data.groupBy((row) => {\n      return row.Engine\n    }).bake().forEach((group) => {\n      graphDataMap[group.first().Engine] = []\n      graphLayoutMap[group.first().Engine] = Object.assign({}, this.graphLayout)\n      graphLayoutMap[group.first().Engine].title = group.first().Engine\n      const model = this.web.modelParameters.filter((row) => {\n        return row.Engine === group.first().Engine && row.Tissue === group.first().Tissue\n      })\n\n      if (model.length > 0) {\n        const temp: any = {\n          x: model[0].k_pool.map((x) => {return x.day}),\n          y: model[0].k_pool.map((x) => {return x.value}),\n          mode: 'lines',\n          name: 'K optimized',\n          line: {\n            color: 'rgba(191,55,55,0.5)',\n            shape: 'spline',\n          },\n          showlegend: false,\n          hovertemplate: `Day: %{x}<br>Value: %{y}<br>K optimized`\n        }\n        graphDataMap[group.first().Engine].push(temp)\n      }\n\n      for (const i of group) {\n        if (this.web.settings.searchMap[i.id]) {\n          const temp: any = {\n            x: i.tau_model.map((x) => {\n              return x.day\n            }),\n            y: i.tau_model.map((x) => {\n              return x.value\n            }),\n            mode: 'lines',\n            data: i.id,\n            name: i.Precursor_Id,\n            line: {\n              color: this.web.settings.colorMap[this.web.settings.searchMap[i.id][this.web.settings.searchMap[i.id].length -1]].slice(),\n              shape: 'spline',\n            },\n            showlegend: false,\n            hovertemplate: \"Day: %{x}<br>Value: %{y}<br>\"+i.Precursor_Id\n          }\n          graphDataMap[group.first().Engine].push(temp)\n        } else {\n          const temp: any = {\n            x: i.tau_model.map((x) => {\n              return x.day\n            }),\n            y: i.tau_model.map((x) => {\n              return x.value\n            }),\n            mode: 'lines',\n            data: i.id,\n            name: i.Precursor_Id,\n            line: {\n              color: \"rgba(140,140,140,0.13)\",\n              shape: 'spline',\n            },\n            showlegend: false,\n            hovertemplate: \"Day: %{x}<br>Value: %{y}<br>\"+i.Precursor_Id\n          }\n          if (this.hideNotSelected) {\n            temp.line.color = \"rgba(140,140,140,0)\"\n          }\n          graphDataMap[group.first().Engine].push(temp)\n        }\n      }\n    })\n    this.graphDataMap = graphDataMap\n    this.graphLayoutMap = graphLayoutMap\n    this.engines = Object.keys(graphDataMap)\n    this.revision += 1\n  }\n\n  OnClick(event: any) {\n    if (\"points\" in event) {\n\n        const precursorIds: string[] = []\n        for (const i of event.points) {\n          precursorIds.push(i.data.name)\n          this.web.setOperationColor(i.data.name)\n          this.web.settings.searchOperations.push(i.data.name)\n        }\n        const data= this.data.where((row) => {\n            return precursorIds.includes(row.Precursor_Id)\n        }).bake()\n\n      const ids: number[] = []\n      data.forEach((row) => {\n        ids.push(row.id)\n        if (!this.web.settings.searchMap[row.id]) {\n          this.web.settings.searchMap[row.id] = []\n        }\n        if (!this.web.settings.searchMap[row.id].includes(row.Precursor_Id)) {\n          this.web.settings.searchMap[row.id].push(row.Precursor_Id)\n        }\n      })\n\n      if (ids.length > 0) {\n          this.web.selectionHandler(ids)\n      }\n    }\n  }\n}\n","<div class=\"card\" *ngIf=\"engines.length > 0\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{data.first().Tissue}}</h5>\n    <div class=\"row gap-1\">\n      <div *ngFor=\"let e of engines\" class=\"col-4\">\n        <plotly-plot (plotlyClick)=\"OnClick($event)\" [data]=\"graphDataMap[e]\" [layout]=\"graphLayoutMap[e]\"  [revision]=\"revision\"></plotly-plot>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {DataFrame, IDataFrame} from \"data-forge\";\nimport {MSData, MSDataValues} from \"../msdata\";\nimport {WebService} from \"../web.service\";\nimport {ToastService} from \"../toast.service\";\n\n@Component({\n  selector: 'app-protein-search',\n  templateUrl: './protein-search.component.html',\n  styleUrls: ['./protein-search.component.scss']\n})\nexport class ProteinSearchComponent {\n  tissues: string[] = []\n  engines: string[] = []\n  samples: string[] = []\n  form: FormGroup = this.fb.group({\n    tissues: new FormControl<string[]>([], Validators.required),\n    engines: new FormControl<string[]>([], Validators.required),\n    proteotypic: new FormControl<boolean>(false),\n    minSamplesDetected: new FormControl<number>(1),\n    minTimepointsDetected: new FormControl<number>(1),\n  })\n\n  formExperimentParameters: FormGroup = this.fb.group({\n    samples: new FormControl<string[]>([], Validators.required),\n  })\n\n  private _data: IDataFrame<number, MSData> = new DataFrame()\n  filteredDF: IDataFrame<number, MSData> = new DataFrame()\n\n  @Input() set data(value: IDataFrame<number, MSData>) {\n    this._data = value\n    this.tissues = this._data.getSeries(\"Tissue\").distinct().toArray()\n    this.engines = this._data.getSeries(\"Engine\").distinct().toArray()\n    this.form.controls['tissues'].setValue(this.tissues)\n    this.form.controls['engines'].setValue(this.engines)\n    // assign color to engines\n    // for (let i = 0; i < this.engines.length; i++) {\n    //   const position = i%this.web.defaultColorList.length\n    //   if (this.web.colorMap[this.engines[position]] === undefined) {\n    //     this.web.colorMap[this.engines[position]] = this.web.defaultColorList[position]\n    //   }\n    // }\n    this.samples = Object.keys(this.web.settings.sampleMap).sort()\n    this.formExperimentParameters.controls['samples'].setValue(this.samples.filter((s) => {\n      return this.web.settings.sampleMap[s].Sample_Label === \"pulse\"\n    }))\n    this.web.settings.selectedSamples = this.formExperimentParameters.controls['samples'].value\n    this.reloadData()\n  }\n  @Output() filteredData: EventEmitter<IDataFrame<number, MSData>> = new EventEmitter<IDataFrame<number, MSData>>()\n  get data(): IDataFrame<number, MSData> {\n    return this._data\n  }\n  constructor(private fb: FormBuilder, public web: WebService, private toastService: ToastService) {\n    this.web.restoreSubject.asObservable().subscribe((data) => {\n      if (data) {\n        this.form.patchValue(this.web.settings.form)\n        this.formExperimentParameters.patchValue(this.web.settings.formExperimentParameters)\n        this.reloadData()\n      }\n\n    })\n  }\n\n  reloadData() {\n    this.toastService.show(\"Data formating\", \"Filtering data\")\n    this.filteredDF = this.data.where((row) => {\n      return this.form.controls['tissues'].value.includes(row.Tissue) && this.form.controls['engines'].value.includes(row.Engine) && row.n_Samples >= this.form.controls['minSamplesDetected'].value && row.n_TimePoints >= this.form.controls['minTimepointsDetected'].value && this.checkIfDataIsDetectedInSelectedSamples(row.values)\n    })\n    if (this.form.controls['proteotypic'].value) {\n      this.filteredDF = this.filteredDF.where((row) => {\n        return row.Proteotypic == 1\n      })\n    }\n    this.filteredDF = this.filteredDF.bake()\n    this.web.settings.form = this.form.value\n    this.web.settings.formExperimentParameters = this.formExperimentParameters.value\n    this.filteredData.emit(this.filteredDF)\n  }\n\n  reset() {\n    this.form.reset()\n    this.reloadData()\n  }\n\n  updateSelection() {\n    this.web.settings.selectedSamples = this.formExperimentParameters.controls['samples'].value\n    this.web.redrawSubject.next(true)\n  }\n\n  checkIfDataIsDetectedInSelectedSamples(values: MSDataValues[]) {\n    for (const v of values) {\n      if (this.web.settings.selectedSamples.includes(v.Sample_Name)) {\n        if (v.Sample_H_over_HL !== null) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n}\n","<div class=\"d-flex\" style=\"gap: 20px\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">\n        <p>\n          Peptide Filter Parameter Control\n        </p>\n      </h5>\n      <form [formGroup]=\"form\" class=\"d-flex\" style=\"gap: 20px\">\n        <div class=\"form-group\" style=\"width: 300px\">\n          <label for=\"tissues\">Tissue Selection</label>\n          <select id=\"tissues\" class=\"form-control\" formControlName=\"tissues\" multiple>\n            <option *ngFor=\"let o of tissues\" [value]=\"o\">{{o}}</option>\n          </select>\n        </div>\n        <div class=\"form-group\" style=\"width: 300px\">\n          <label for=\"engines\">Engine Selection</label>\n          <select id=\"engines\" class=\"form-control\" formControlName=\"engines\" multiple>\n            <option *ngFor=\"let o of engines\" [value]=\"o\">{{o}}</option>\n          </select>\n        </div>\n        <div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" formControlName=\"proteotypic\" id=\"proteotypic\" type=\"checkbox\">\n            <label class=\"form-check-label\" for=\"proteotypic\">\n              Proteotypic Peptides Only\n            </label>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"minSamples\">Minimum Number of Detected Samples</label>\n            <input id=\"minSamples\" class=\"form-control\" type=\"number\" formControlName=\"minSamplesDetected\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"minTimepoints\">Minimum Number of Detected Timepoints</label>\n            <input id=\"minTimepoints\" class=\"form-control\" type=\"number\" formControlName=\"minTimepointsDetected\">\n          </div>\n        </div>\n      </form>\n    </div>\n    <div class=\"card-footer d-flex\" style=\"gap: 20px\">\n      <button class=\"btn btn-primary\" (click)=\"reloadData()\">Reload Data</button>\n      <button class=\"btn btn-primary\" (click)=\"reset()\">Reset</button>\n    </div>\n  </div>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">\n        <p>\n          Experiment Parameters\n        </p>\n      </h5>\n      <form [formGroup]=\"formExperimentParameters\" class=\"d-flex\" style=\"gap: 20px\">\n        <div class=\"form-group\" style=\"width: 300px\">\n          <label for=\"experiment\">Sample Selection</label>\n          <select id=\"experiment\" formControlName=\"samples\" multiple class=\"form-control\">\n            <option *ngFor=\"let o of samples\" [value]=\"o\">{{o}} {{web.settings.sampleMap[o].Sample_Label}} - day {{web.settings.sampleMap[o].Days}} - rep {{web.settings.sampleMap[o].Replicate}}</option>\n          </select>\n          <small>Selected {{formExperimentParameters.value.samples.length}} samples</small>\n        </div>\n      </form>\n    </div>\n    <div class=\"card-footer\">\n      <button class=\"btn btn-primary\" (click)=\"updateSelection()\">Update Selection</button>\n    </div>\n  </div>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {DataFrame, IDataFrame, ISeries, Series} from \"data-forge\";\nimport {MSData} from \"../msdata\";\n\n@Component({\n  selector: 'app-protein-tau-collection',\n  templateUrl: './protein-tau-collection.component.html',\n  styleUrls: ['./protein-tau-collection.component.scss']\n})\nexport class ProteinTauCollectionComponent {\n  private _data: IDataFrame<number, MSData> = new DataFrame()\n  iscollapse: boolean = true\n  @Input() set data(value : IDataFrame<number, MSData>) {\n    this._data = value\n    this.tissueGroupData = this._data.groupBy(row => row.Tissue).bake()\n  }\n\n  get data(): IDataFrame<number, MSData> {\n    return this._data\n  }\n  tissueGroupData: ISeries<number, IDataFrame<number, MSData>> = new Series()\n  combinedPlot: boolean = true\n}\n","<div class=\"accordion\">\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\">\n      <button [ngClass]=\"{'accordion-button': true, 'collapsed': iscollapse}\" type=\"button\" (click)=\"iscollapse=!iscollapse\">\n        TAU distribution overview\n      </button>\n    </h2>\n    <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"iscollapse\">\n      <div class=\"accordion-body\">\n        <div *ngIf=\"!combinedPlot; else combined\">\n          <div *ngFor=\"let g of tissueGroupData\">\n            <app-protein-tau-distribution [data]=\"g\"></app-protein-tau-distribution>\n          </div>\n        </div>\n\n        <ng-template #combined>\n          <app-protein-tau-distribution [data]=\"data\" *ngIf=\"!iscollapse\"></app-protein-tau-distribution>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import {Component, Input} from '@angular/core';\nimport {MSData} from \"../msdata\";\nimport {DataFrame, IDataFrame} from \"data-forge\";\nimport {WebService} from \"../web.service\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-protein-tau-distribution',\n  templateUrl: './protein-tau-distribution.component.html',\n  styleUrls: ['./protein-tau-distribution.component.scss']\n})\nexport class ProteinTauDistributionComponent {\n  private _data: IDataFrame<number, MSData> = new DataFrame()\n  @Input() set data(value: IDataFrame<number, MSData>) {\n    this._data = value\n    this.drawGraph()\n  }\n  get data(): IDataFrame<number, MSData> {\n    return this._data\n  }\n  revision: number = 0\n  graphDataMap: any = {}\n  graphLayoutBase: any = {\n    title: \"\",\n    xaxis: {\n      title: \"Tissue\",\n      type: \"category\",\n      tickmode: \"array\",\n    },\n    yaxis: {\n        title: \"log2(TAU)\",\n    },\n    annotations: [],\n    font: {\n        family: \"Arial\",\n        color: \"black\"\n    }\n  }\n  graphLayoutMap: any = {\n\n  }\n\n  form = this.fb.group({\n    hideNotSelected: new FormControl(false)\n  })\n\n  constructor(private web: WebService, private fb: FormBuilder) {\n    this.web.redrawSubject.subscribe(() => {\n      this.drawGraph()\n    })\n  }\n  engineList: string[] = []\n\n  drawGraph() {\n    // draw box plot for tau distribution with y-axis being tau value and x axis being tissue, the box plot should also show individual data points as well with the data points being on the left outside of the box plot\n    const temp: any = {}\n    this.graphDataMap = {}\n    this.graphLayoutMap = {}\n    for (const row of this.data) {\n      if (!(row.Engine in temp)) {\n        temp[row.Engine] = {}\n      }\n      if (!(row.Tissue in temp[row.Engine])) {\n        temp[row.Engine][row.Tissue] = {\n          x: [],\n          y: [],\n          text: [],\n          name: row.Tissue,\n          type: \"box\",\n          boxpoints: \"all\",\n          jitter: 0.3,\n          pointpos: -1.8,\n          showlegend: false,\n          marker: {\n            color: [],\n          },\n\n          fillcolor: \"rgba(236,96,99,0.78)\",\n          hovertemplate: \"Tissue: %{x}<br>log2(TAU): %{y}<br>Precursor ID: %{text}<extra></extra>\"\n        }\n\n      }\n      temp[row.Engine][row.Tissue].x.push(row.Tissue)\n      temp[row.Engine][row.Tissue].y.push(Math.log2(row.tau_POI))\n      if (this.web.settings.selectedMSDataID.includes(row.id)) {\n        if (this.web.settings.searchMap[row.id]) {\n            temp[row.Engine][row.Tissue].marker.color.push(this.web.settings.colorMap[this.web.settings.searchMap[row.id][this.web.settings.searchMap[row.id].length-1]].slice())\n        }\n      } else {\n        if (this.form.value.hideNotSelected) {\n          temp[row.Engine][row.Tissue].marker.color.push(\"rgba(140,140,140,0)\")\n        } else {\n          temp[row.Engine][row.Tissue].marker.color.push(\"rgba(140,140,140,0.13)\")\n        }\n      }\n      temp[row.Engine][row.Tissue].text.push(row.Precursor_Id)\n    }\n    for (const engine in temp) {\n      if (!(engine in this.graphLayoutMap)) {\n        this.graphLayoutMap[engine] = Object.assign({}, this.graphLayoutBase)\n        this.graphLayoutMap[engine].title = engine\n        this.graphDataMap[engine] = []\n      }\n      for (const tissue in temp[engine]) {\n        this.graphDataMap[engine].push(temp[engine][tissue])\n      }\n    }\n    this.engineList = Object.keys(this.graphLayoutMap)\n    this.revision += 1\n  }\n\n  OnClick(event: any) {\n    console.log(event)\n    if (\"points\" in event) {\n      const selectedData: string[] = []\n      for (const point of event.points) {\n        if (!(\"hoverOnBox\" in point)) {\n          selectedData.push(point.data.text[point.pointNumber])\n\n          this.web.setOperationColor(point.data.text[point.pointNumber])\n          this.web.settings.searchOperations.push(point.data.text[point.pointNumber])\n        }\n\n      }\n      if (selectedData.length > 0) {\n        const data= this.data.where((row) => {\n          return selectedData.includes(row.Precursor_Id)\n        }).bake()\n        const ids: number[] = []\n        data.forEach((row) => {\n          ids.push(row.id)\n          if (!this.web.settings.searchMap[row.id]) {\n            this.web.settings.searchMap[row.id] = []\n          }\n          if (!this.web.settings.searchMap[row.id].includes(row.Precursor_Id)) {\n            this.web.settings.searchMap[row.id].push(row.Precursor_Id)\n          }\n        })\n        if (ids.length > 0) {\n          this.web.selectionHandler(ids)\n        }\n      }\n    }\n  }\n\n  updatePlot() {\n    this.drawGraph()\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"updatePlot()\">\n  <div class=\"form-check\">\n    <input class=\"form-check-input\" id=\"hideNotSelected\" formControlName=\"hideNotSelected\" type=\"checkbox\">\n    <label for=\"hideNotSelected\">Make not selected dot points transparent</label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Redraw</button>\n</form>\n\n<div *ngFor=\"let e of engineList\">\n  <plotly-plot (plotlyClick)=\"OnClick($event)\" [data]=\"graphDataMap[e]\" [layout]=\"graphLayoutMap[e]\" [revision]=\"revision\"></plotly-plot>\n</div>\n\n","import {Component, Input} from '@angular/core';\nimport {DataFrame, IDataFrame} from \"data-forge\";\nimport {MSData} from \"../msdata\";\nimport {debounceTime, distinctUntilChanged, map, Observable, OperatorFunction} from \"rxjs\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-protein-view-peptide-collection',\n  templateUrl: './protein-view-peptide-collection.component.html',\n  styleUrls: ['./protein-view-peptide-collection.component.scss']\n})\nexport class ProteinViewPeptideCollectionComponent {\n  private _data: IDataFrame<number, MSData> = new DataFrame()\n  displayDF: IDataFrame<number, MSData> = new DataFrame()\n\n  precursorID: string[] = []\n  @Input() set data (value: IDataFrame<number, MSData>) {\n    this._data = value\n\n    if (this.form.value.validTAUPOI) {\n      this.displayDF = value.where(row => row.tau_POI !== null).bake()\n    } else {\n      this.displayDF = value\n    }\n    this.precursorID = this._data.getSeries(\"Precursor_Id\").distinct().toArray()\n  }\n\n  get data(): IDataFrame<number, MSData> {\n    return this._data\n  }\n\n  page:number = 1;\n  pageSize: number = 10;\n\n\n\n  form: FormGroup = this.fb.group({\n    filterPrecursorID: new FormControl<string>(\"\"),\n    pageSize: new FormControl<number>(10, [Validators.required, Validators.min(1)]),\n    validTAUPOI: new FormControl<boolean>(true)\n  })\n\n\n\n  constructor(private fb: FormBuilder) {\n    this.form.controls['filterPrecursorID'].valueChanges.subscribe((value) => {\n      this.displayDF = this.data.where(row => row.Precursor_Id.indexOf(value.filterPrecursorID.toUpperCase()) > -1)\n    })\n    this.form.controls['pageSize'].valueChanges.subscribe((value) => {\n      if (value > 0) {\n        this.pageSize = value\n      }\n    })\n    this.form.valueChanges.subscribe((value) => {\n      if (value.filterPrecursorID === \"\") {\n        this.displayDF = this.data\n      } else {\n        this.displayDF = this.data.where(row => row.Precursor_Id.indexOf(value.filterPrecursorID.toUpperCase()) > -1)\n      }\n      if (value.validTAUPOI) {\n        this.displayDF = this.displayDF.where(row => row.tau_POI !== null)\n      }\n        this.displayDF = this.displayDF.bake()\n        this.pageSize = value.pageSize\n    })\n  }\n\n  selectPage(page: string) {\n    this.page = parseInt(page, 10) || 1;\n  }\n  FILTER_PAG_REGEX = /[^0-9]/g;\n  formatInput(input: HTMLInputElement) {\n    input.value = input.value.replace(this.FILTER_PAG_REGEX, '');\n  }\n}\n","<div class=\"d-flex\" style=\"gap: 20px\">\n  <div class=\"card mb-5\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"form\">\n        <div class=\"d-flex\" style=\"gap:20px\">\n          <div class=\"form-group\">\n            <label for=\"filterPrecursorID\">\n              Precursor ID Display Filter\n            </label>\n            <input\n              type=\"search\"\n              class=\"form-control\"\n              id=\"filterPrecursorID\"\n              placeholder=\"Precursor ID\"\n              formControlName=\"filterPrecursorID\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"pageSize\">\n              Page Size\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"pageSize\"\n              placeholder=\"Page Size\"\n              formControlName=\"pageSize\">\n          </div>\n          <div class=\"form-check\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              id=\"validTAUPOI\"\n              formControlName=\"validTAUPOI\">\n            <label for=\"validTAUPOI\" class=\"form-check-label\">\n              Valid TAU_POI only\n            </label>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n\n\n\n<ngb-pagination [collectionSize]=\"displayDF.count()\" [(page)]=\"page\" [boundaryLinks]=\"true\" [rotate]=\"true\" [pageSize]=\"pageSize\">\n  <ng-template ngbPaginationPages let-page let-pages=\"pages\">\n    <li class=\"ngb-custom-pages-item\" *ngIf=\"pages.length > 0\">\n      <div class=\"mb-3 d-flex flex-nowrap px-2\">\n        <label id=\"paginationInputLabel\" for=\"paginationInput\" class=\"col-form-label me-2 ms-1\">Page</label>\n        <input\n          #i\n          type=\"text\"\n          inputmode=\"numeric\"\n          pattern=\"[0-9]*\"\n          class=\"form-control custom-pages-input\"\n          id=\"paginationInput\"\n          [value]=\"page\"\n          (keyup.enter)=\"selectPage(i.value)\"\n          (blur)=\"selectPage(i.value)\"\n          (input)=\"formatInput($any($event).target)\"\n          aria-labelledby=\"paginationInputLabel paginationDescription\"\n          style=\"width: 2.5rem\"\n        />\n        <span id=\"paginationDescription\" class=\"col-form-label text-nowrap px-2\"> of {{pages.length}}</span>\n      </div>\n    </li>\n  </ng-template>\n</ngb-pagination>\n<ng-container *ngFor=\"let r of displayDF.toArray()|slice: (page-1) * pageSize: page*pageSize\">\n  <app-protein-view-peptide-container [data]=\"r\"></app-protein-view-peptide-container>\n\n</ng-container>\n\n<ngb-pagination [collectionSize]=\"displayDF.count()\" [(page)]=\"page\" [boundaryLinks]=\"true\" [rotate]=\"true\" [pageSize]=\"pageSize\">\n  <ng-template ngbPaginationPages let-page let-pages=\"pages\">\n    <li class=\"ngb-custom-pages-item\" *ngIf=\"pages.length > 0\">\n      <div class=\"mb-3 d-flex flex-nowrap px-2\">\n        <label id=\"paginationInputLabelBottom\" for=\"paginationInput\" class=\"col-form-label me-2 ms-1\">Page</label>\n        <input\n          #i\n          type=\"text\"\n          inputmode=\"numeric\"\n          pattern=\"[0-9]*\"\n          class=\"form-control custom-pages-input\"\n          id=\"paginationInputBottom\"\n          [value]=\"page\"\n          (keyup.enter)=\"selectPage(i.value)\"\n          (blur)=\"selectPage(i.value)\"\n          (input)=\"formatInput($any($event).target)\"\n          aria-labelledby=\"paginationInputLabel paginationDescription\"\n          style=\"width: 2.5rem\"\n        />\n        <span id=\"paginationDescriptionBottom\" class=\"col-form-label text-nowrap px-2\"> of {{pages.length}}</span>\n      </div>\n    </li>\n  </ng-template>\n</ngb-pagination>\n","import {Component, Input} from '@angular/core';\nimport {MSData} from \"../msdata\";\nimport {WebService} from \"../web.service\";\n\n@Component({\n  selector: 'app-protein-view-peptide-container',\n  templateUrl: './protein-view-peptide-container.component.html',\n  styleUrls: ['./protein-view-peptide-container.component.scss']\n})\nexport class ProteinViewPeptideContainerComponent {\n  private _data: MSData|undefined = undefined\n  @Input() set data(value: MSData) {\n    this._data = value\n  }\n\n  get data(): MSData|undefined {\n    return this._data\n  }\n\n  constructor(public web: WebService) { }\n}\n","\n<div class=\"row m-5\" *ngIf=\"data\">\n  <hr>\n  <div class=\"col-3\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <b class=\"card-title\" *ngIf=\"web.settings.colorMap[data.Precursor_Id]; else normal\" [ngStyle]=\"{'color': web.settings.colorMap[data.Precursor_Id]}\">\n          {{data.Precursor_Id}}\n        </b>\n        <ng-template #normal>\n          <b class=\"card-title\">\n            {{data.Precursor_Id}}\n          </b>\n        </ng-template>\n        <p>\n          Proteotypic: {{data.Proteotypic}} <br>\n          Strip Sequence: {{data.Stripped_Sequence}} <br>\n          Time Points: {{data.n_TimePoints}} <br>\n          Samples: {{data.n_Samples}} <br>\n          TAU POI: {{data.tau_POI}} <br>\n          TAU POI Range: {{data.tau_POI_range}} <br>\n          TAU POI Range Relative: {{data.tau_POI_range_relative}} <br>\n          TAU POI Lower Bound: {{data.tau_POI_lower_bound}} <br>\n          TAU POI Upper Bound: {{data.tau_POI_upper_bound}} <br>\n          Halflife POI: {{data.HalfLife_POI}} <br>\n          Halflife POI Range: {{data.HalfLife_POI_range}} <br>\n          Halflife POI Range Relative: {{data.HalfLife_POI_range_relative}} <br>\n          Halflife POI Lower Bound: {{data.HalfLife_POI_lower_bound}} <br>\n          Halflife POI Upper Bound: {{data.HalfLife_POI_upper_bound}} <br>\n          rss: {{data.rss}} <br>\n          AverageRSS: {{data.AverageRSS}} <br>\n          Engine: {{data.Engine}} <br>\n          Tissue: {{data.Tissue}} <br>\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-9\">\n    <app-scatter-time-plot [data]=\"data\"></app-scatter-time-plot>\n    <app-violin-time-plot [data]=\"data.values\"></app-violin-time-plot>\n  </div>\n\n</div>\n\n\n","import {Component, Input} from '@angular/core';\nimport {MSData} from \"../msdata\";\nimport {DataFrame, IDataFrame} from \"data-forge\";\nimport {WebService} from \"../web.service\";\n\n@Component({\n  selector: 'app-protein-view-scatter-h-vs-l',\n  templateUrl: './protein-view-scatter-h-vs-l.component.html',\n  styleUrls: ['./protein-view-scatter-h-vs-l.component.scss']\n})\nexport class ProteinViewScatterHVsLComponent {\n  private _data: IDataFrame<number, MSData> = new DataFrame()\n  tissueName: string = \"\"\n  @Input() set data (values: IDataFrame<number, MSData>) {\n    this._data = values\n    this.tissueName = this._data.first().Tissue\n    this.drawGraph()\n  }\n\n  get data(): IDataFrame<number, MSData> {\n    return this._data\n  }\n\n  graphData: any[] = []\n  graphLayout: any = {\n    title: this.tissueName,\n    xaxis: {\n      title: \"Log2 H\",\n    },\n    yaxis: {\n      title: \"Log2 L\",\n    }\n  }\n\n  constructor(private web: WebService) { }\n\n  drawGraph() {\n    const graphData: any[] = []\n    const temp: any = {\n\n    }\n    this.data.forEach((row) => {\n      if (!(row.Engine in temp)) {\n        temp[row.Engine] = {\n          x: [],\n          y: [],\n          text: [],\n          mode: 'markers',\n          type: 'scatter',\n          marker: {\n            size: 5,\n            color: this.web.settings.colorMap[row.Engine]\n          },\n          name: row.Engine\n        }\n      }\n      row.values.forEach((value) => {\n        if (value.Sample_H_over_HL !== null) {\n          temp[row.Engine].x.push(Math.log2(value.SampleH))\n          temp[row.Engine].y.push(Math.log2(value.SampleL))\n          temp[row.Engine].text.push(`${value.Sample_Name}<br> ${row.Precursor_Id}<br> H/L: ${value.Sample_H_over_HL}<br> ${row.Engine}`)\n        }\n      })\n    })\n    for (const i in temp) {\n      graphData.push(temp[i])\n    }\n    this.graphLayout.title = this.tissueName\n    this.graphData = graphData\n  }\n}\n","<plotly-plot [data]=\"graphData\" [layout]=\"graphLayout\" [updateOnDataChange]=\"true\" [updateOnLayoutChange]=\"true\"></plotly-plot>\n","import {Component, Input} from '@angular/core';\nimport {MSData} from \"../msdata\";\nimport {DataFrame, IDataFrame, ISeries, Series} from \"data-forge\";\n\n@Component({\n  selector: 'app-protein-view-tissue-based',\n  templateUrl: './protein-view-tissue-based.component.html',\n  styleUrls: ['./protein-view-tissue-based.component.scss']\n})\nexport class ProteinViewTissueBasedComponent {\n  iscollapse = false\n  private _data: IDataFrame<number, MSData> = new DataFrame()\n  groupData: ISeries<number, IDataFrame<number, MSData>> = new Series()\n  @Input() set data (values: IDataFrame<number, MSData>) {\n    this._data = values\n    this.groupData = this._data.groupBy(row => row.Tissue).bake()\n  }\n\n  get data(): IDataFrame<number, MSData> {\n    return this._data\n  }\n\n  constructor() { }\n}\n","<div class=\"accordion\">\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\">\n      <button [ngClass]=\"{'accordion-button': true, 'collapsed': iscollapse}\" type=\"button\" (click)=\"iscollapse=!iscollapse\">\n        Tissue overview\n      </button>\n    </h2>\n    <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"iscollapse\">\n      <div class=\"accordion-body\">\n\n        <div class=\"row\" *ngIf=\"groupData.count() > 0\">\n          <div class=\"col-4\" *ngFor=\"let t of groupData\">\n            <app-protein-view-scatter-h-vs-l [data]=\"t\"></app-protein-view-scatter-h-vs-l>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport {WebService} from \"../web.service\";\nimport {DataFrame, IDataFrame, ISeries, Series} from \"data-forge\";\nimport {MSData, MSDataValues} from \"../msdata\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Modelling} from \"../modelling-data\";\nimport {ToastService} from \"../toast.service\";\nimport {SequenceCoverage} from \"../sequence-coverage\";\n\n@Component({\n  selector: 'app-protein-view',\n  templateUrl: './protein-view.component.html',\n  styleUrls: ['./protein-view.component.scss']\n})\nexport class ProteinViewComponent {\n  protein: string = \"\"\n  df: IDataFrame<number, MSData> = new DataFrame()\n\n  private _filteredDF: IDataFrame<number, MSData> = new DataFrame()\n\n  set filteredData(value: IDataFrame<number, MSData>) {\n    this._filteredDF = value\n  }\n\n  get filteredData(): IDataFrame<number, MSData> {\n    return this._filteredDF\n  }\n\n  modellingData: IDataFrame<number, Modelling> = new DataFrame()\n  //modellingDataGroup: ISeries<number, IDataFrame<number, Modelling>> = new Series()\n  modellingDataGroup: ISeries<number, IDataFrame<number, MSData>> = new Series()\n  coverageData: SequenceCoverage|undefined = undefined\n  @Input() set proteinGroup(value: string) {\n    this.protein = value\n    this.web.getMSData(this.protein).subscribe((data) => {\n      this.df = new DataFrame(data)\n      console.log(this.df)\n    })\n    for (const i of value.split(\",\")) {\n\n      this.web.getCoverageData(i).subscribe((data) => {\n        this.coverageData = data\n      })\n    }\n  }\n\n\n\n  page: number = 1\n\n  constructor(public web: WebService, private fb: FormBuilder, private toastService: ToastService) {\n\n  }\n\n  handlerFilterDFUpdate(value: IDataFrame<number, MSData>) {\n    this.filteredData = value\n\n    const ids: number[] = value.getSeries(\"id\").bake().toArray()\n    const days: number[] = []\n    for (const s of this.web.settings.selectedSamples) {\n      if (!days.includes(this.web.settings.sampleMap[s].Days)) {\n        days.push(this.web.settings.sampleMap[s].Days)\n      }\n    }\n\n    if (days.length > 0 && ids.length > 0) {\n      this.toastService.show(\"Data formating\", \"Grouping data by tissue\")\n      this.modellingDataGroup = this.filteredData.where((row) => {\n        return row.tau_model !== null\n      }).groupBy((row) => {\n        return row.Tissue\n      }).bake()\n\n      // this.web.postModellingDataMass(ids, days).subscribe((data) => {\n      //   this.modellingData = new DataFrame(data)\n      //   this.modellingDataGroup = this.modellingData.groupBy((row) => {\n      //     return row.Tissue\n      //   }).bake()\n      //   console.log(this.modellingData)\n      // })\n    }\n\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n  <div><h1><b>{{protein}}</b></h1></div>\n</div>\n<div class=\"container\">\n  <app-protein-search [data]=\"df\" (filteredData)=\"handlerFilterDFUpdate($event)\"></app-protein-search>\n</div>\n\n<!--<div class=\"container mt-5\" *ngIf=\"filteredDF.count() > 0\">-->\n<!--  <app-protein-view-tissue-based [data]=\"filteredDF\"></app-protein-view-tissue-based>-->\n<!--</div>-->\n\n<div class=\"container mt-5\" *ngIf=\"filteredData.count() > 0; else empty\">\n  <app-protein-tau-collection [data]=\"filteredData\"></app-protein-tau-collection>\n</div>\n\n<div class=\"container mt-5\" *ngIf=\"modellingDataGroup.count() > 0; else loadingModelling\">\n  <app-protein-modelling-collection [data]=\"modellingDataGroup\"></app-protein-modelling-collection>\n</div>\n\n<div class=\"container mt-5\" *ngIf=\"coverageData\">\n  <app-coverage-plot [coverageData]=\"coverageData\"></app-coverage-plot>\n</div>\n\n\n<div class=\"container mt-5\" *ngIf=\"filteredData.count() > 0; else empty\">\n  <app-protein-view-peptide-collection [data]=\"filteredData\"></app-protein-view-peptide-collection>\n</div>\n<app-floating-panels [filteredDF]=\"filteredData\"></app-floating-panels>\n<ng-template #empty>\n  <div class=\"container d-flex justify-content-center align-content-center\">\n    <p>\n      No data could be found with the above filter parameters.\n    </p>\n  </div>\n</ng-template>\n\n<ng-template #loadingModelling>\n  <div class=\"container d-flex justify-content-center align-content-center\">\n    <p>\n      Loading modelling data...\n    </p>\n  </div>\n</ng-template>\n\n","import {Component, Input} from '@angular/core';\nimport {MSData, MSDataValues} from \"../msdata\";\nimport {WebService} from \"../web.service\";\n\n@Component({\n  selector: 'app-scatter-time-plot',\n  templateUrl: './scatter-time-plot.component.html',\n  styleUrls: ['./scatter-time-plot.component.scss']\n})\nexport class ScatterTimePlotComponent {\n  private _data: MSData|undefined\n  @Input() set data (value: MSData) {\n    this._data = value\n    this.drawGraph()\n  }\n\n  graphData: any[] = []\n\n  graphLayout: any = {\n    title: \"Scatter Time Plot\",\n    xaxis: {\n      title: \"Time (days)\",\n      range: [0, 50]\n    },\n    yaxis: {\n      title: \"H/L\",\n      range: [0, 1.5]\n    }\n  }\n\n  constructor(private web: WebService) {\n    this.web.redrawSubject.subscribe(() => {\n      this.drawGraph().then(() => {})\n    })\n  }\n\n  async drawGraph() {\n    if (this._data) {\n      let days: number[] = []\n      const daysMap: any = {}\n\n      const graphData: any[] = []\n      const temp: any = {\n        x: [],\n        y: [],\n        mode: 'markers',\n        type: 'scatter',\n        name: 'H + H/L Experimental',\n        marker: {\n          size: 12\n        },\n      }\n      for (const i of this._data.values) {\n        if (this.web.settings.selectedSamples.includes(i.Sample_Name)) {\n\n          if (i.Sample_H_over_HL !== null) {\n            temp.x.push(this.web.settings.sampleMap[i.Sample_Name].Days)\n            temp.y.push(i.Sample_H_over_HL)\n            if (!days.includes(this.web.settings.sampleMap[i.Sample_Name].Days)) {\n              days.push(this.web.settings.sampleMap[i.Sample_Name].Days)\n              daysMap[this.web.settings.sampleMap[i.Sample_Name].Days] = []\n            }\n            daysMap[this.web.settings.sampleMap[i.Sample_Name].Days].push(i.Sample_H_over_HL)\n          }\n        }\n      }\n\n      if (!days.includes(50)) {\n        days.push(50)\n      }\n      if (!days.includes(0)) {\n        days.push(0)\n      }\n      days = days.sort((a,b) => a-b)\n      graphData.push(temp)\n\n      let modelResult: any\n      if (this._data.tau_POI !== null) {\n        const pulseModel: any = {\n          x: [0],\n          y: [0],\n          mode: 'lines',\n          name: 'Pulse Model',\n          line: {\n            color: 'rgb(55, 128, 191)',\n            shape: 'spline',\n          }\n        }\n        const uppderBound: any = {\n          x: [0],\n          y: [0],\n          mode: 'lines',\n          name: 'Pulse Model Upper Bound',\n          line: {\n            shape: 'spline',\n            color: 'rgb(155,41,113)',\n          }\n        }\n\n        const lowerBound: any = {\n          x: [0],\n          y: [0],\n          mode: 'lines',\n          name: 'Pulse Model Lower Bound',\n          line: {\n            shape: 'spline',\n            color: 'rgb(41,155,43)',\n          }\n        }\n\n        for (const i of this._data.tau_model) {\n          pulseModel.x.push(i.day)\n          pulseModel.y.push(i.value)\n          uppderBound.x.push(i.day)\n          uppderBound.y.push(i.tau_POI_upper_bound)\n          lowerBound.x.push(i.day)\n          lowerBound.y.push(i.tau_POI_lower_bound)\n        }\n        //graphData.push(kpoolModel)\n        graphData.push(pulseModel)\n        graphData.push(uppderBound)\n        graphData.push(lowerBound)\n\n        // try {\n        //   modelResult = await this.web.postModellingData(this._data.Tissue, this._data.Engine, this._data.tau_POI, this._data.tau_POI_upper_bound, this._data.tau_POI_lower_bound, days).toPromise()\n        //   const kpoolModel: any = {\n        //     x: [0],\n        //     y: [0],\n        //     mode: 'lines',\n        //     name: 'Kpool Model',\n        //     line: {\n        //       color: 'rgb(219, 64, 82)',\n        //       shape: 'spline',\n        //     }\n        //   }\n        //\n        //\n        //   for (const i of modelResult.kpool) {\n        //     kpoolModel.x.push(i.day)\n        //     kpoolModel.y.push(i.value)\n        //   }\n        //\n        //   //graphData.push(uppderBound)\n        //   //graphData.push(lowerBound)\n        //   console.log(modelResult)\n        // } catch (e) {\n        //   console.log(e)\n        // }\n      }\n\n      this.graphData = graphData\n    }\n\n  }\n\n}\n","<plotly-plot [data]=\"graphData\" [layout]=\"graphLayout\" [updateOnLayoutChange]=\"true\" [updateOnDataChange]=\"true\"></plotly-plot>\n","import {Sample} from \"./sample\";\n\nexport class Settings {\n    form: any = {\n\n    }\n    formExperimentParameters: any = {\n\n    }\n    currentColorPosition: number = 0\n\n    searchOperations: string[] = []\n    searchMap: any = {}\n\n    colorMap: any = {}\n\n    defaultColorList: string[] = [\n        \"#fd7f6f\",\n        \"#7eb0d5\",\n        \"#b2e061\",\n        \"#bd7ebe\",\n        \"#ffb55a\",\n        \"#ffee65\",\n        \"#beb9db\",\n        \"#fdcce5\",\n        \"#8bd3c7\",\n    ]\n    selectedMSDataID: number[] = []\n    sampleMap: {[key: string]: Sample} = {}\n    baseUrl = \"http://localhost:8000\"\n    selectedSamples: string[] = []\n\n    export() {\n        return {\n            currentColorPosition: this.currentColorPosition,\n            searchOperations: this.searchOperations,\n            searchMap: this.searchMap,\n            colorMap: this.colorMap,\n            defaultColorList: this.defaultColorList,\n            selectedMSDataID: this.selectedMSDataID,\n            sampleMap: this.sampleMap,\n            baseUrl: this.baseUrl,\n            selectedSamples: this.selectedSamples,\n        }\n    }\n\n    import(settings: any) {\n        for (const i in settings) {\n            // @ts-ignore\n            this[i] = settings[i]\n        }\n    }\n\n    download() {\n        const element = document.createElement('a');\n        element.setAttribute('href', 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(this.export())));\n        element.setAttribute('download', \"settings.json\");\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {ToastInfo} from \"./toast-info\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  toasts: ToastInfo[] = [];\n  constructor() { }\n  show(header: string, body: string, delay: number = 5000, type: string = 'info') {\n    this.toasts.push({header, body, delay, type});\n    console.log(this.toasts)\n  }\n\n  remove(toast: ToastInfo) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n}\n","import { Component } from '@angular/core';\nimport {ToastService} from \"../toast.service\";\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss']\n})\nexport class ToastComponent {\n  constructor(public toastService: ToastService) {\n  }\n}\n","<ngb-toast\n  [ngClass]=\"toast.type === 'info' ? 'bg-primary text-light' : toast.type === 'success' ? 'bg-success text-light' : toast.type === 'warning' ? 'bg-warning text-light' : 'bg-danger text-light'\" *ngFor=\"let toast of toastService.toasts\" (hidden)=\"toastService.remove(toast)\" [autohide]=\"true\" [delay]=\"toast.delay\">\n  <div class=\"d-flex\">\n    <div class=\"p-2\">\n      <b>{{toast.header}}: </b>{{toast.body}}\n    </div>\n    <div class=\"p-2\">\n      <button type=\"button\" class=\"btn btn-close\" aria-label=\"Close\" (click)=\"toastService.remove(toast)\"></button>\n    </div>\n  </div>\n</ngb-toast>\n","import {Component, Input} from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-variant-selector',\n  templateUrl: './variant-selector.component.html',\n  styleUrls: ['./variant-selector.component.scss']\n})\nexport class VariantSelectorComponent {\n  private _data: string[] = []\n  @Input() set data(value: string[]) {\n    this._data = value\n    this.selectedData = value[0]\n    if (this._data.length == 1) {\n      this.selectedData = this._data[0]\n    }\n  }\n  selectedData: string = \"\"\n  get data(): string[] {\n    return this._data\n  }\n  constructor(private modal: NgbActiveModal) {\n  }\n  submit() {\n    console.log(\"navigate to \" + this.selectedData)\n    this.modal.close(this.selectedData)\n  }\n\n  cancel() {\n    this.modal.dismiss()\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Isoform Selector</h4>\n</div>\n<div class=\"modal-body\">\n    <form>\n        <div class=\"form-group\">\n            <label for=\"isoform-selector\">Select Isoform</label>\n            <select class=\"form-control\" id=\"isoform-selector\" [(ngModel)]=\"selectedData\" [ngModelOptions]=\"{standalone: true}\">\n                <option *ngFor=\"let d of data\" [value]=\"d\">{{d}}</option>\n            </select>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\">Proceed</button>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {MSDataValues} from \"../msdata\";\nimport {WebService} from \"../web.service\";\n\n@Component({\n  selector: 'app-violin-time-plot',\n  templateUrl: './violin-time-plot.component.html',\n  styleUrls: ['./violin-time-plot.component.scss']\n})\nexport class ViolinTimePlotComponent {\n  private _data: MSDataValues[] = []\n  @Input() set data (value: MSDataValues[]) {\n    this._data = value\n    this.drawGraph()\n  }\n\n  graphData: any[] = []\n\n  graphLayout: any = {\n    title: \"Violin Time Plot\",\n    xaxis: {\n      title: \"Time (days)\",\n      tickvals: [],\n      ticktext: [],\n      fixedrange: true\n    },\n    yaxis: {\n      title: \"H/L\"\n    }\n\n  }\n\n  constructor(private web: WebService) {\n    this.web.redrawSubject.subscribe(() => {\n      this.drawGraph()\n    })\n  }\n\n  drawGraph() {\n    const graphData: any[] = []\n    const temp: any = {}\n    let position = 0\n\n    this._data.forEach((i) => {\n      if (this.web.settings.selectedSamples.includes(i.Sample_Name)) {\n        if (i.Sample_H_over_HL !== null) {\n          if (!(temp[this.web.settings.sampleMap[i.Sample_Name].Days])) {\n            temp[this.web.settings.sampleMap[i.Sample_Name].Days] = {\n              x: [],\n              y: [],\n              type: 'violin',\n              name: this.web.settings.sampleMap[i.Sample_Name].Days,\n              box: {\n                visible: true\n              },\n              showlegend: false,\n              spanmode: 'soft',\n              meanline: {\n                visible: true\n              },\n              line: {\n                color: \"black\"\n              },\n              points: 'all',\n            }\n            if (position >= this.web.settings.defaultColorList.length) {\n              position = 0\n            }\n            temp[this.web.settings.sampleMap[i.Sample_Name].Days].fillcolor = this.web.settings.defaultColorList[position]\n            position += 1\n            this.graphLayout.xaxis.tickvals.push(this.web.settings.sampleMap[i.Sample_Name].Days)\n            this.graphLayout.xaxis.ticktext.push(this.web.settings.sampleMap[i.Sample_Name].Days)\n          }\n          temp[this.web.settings.sampleMap[i.Sample_Name].Days].x.push(this.web.settings.sampleMap[i.Sample_Name].Days)\n          temp[this.web.settings.sampleMap[i.Sample_Name].Days].y.push(i.Sample_H_over_HL)\n        }\n      }\n    })\n    for (const i in temp) {\n      graphData.push(temp[i])\n    }\n    this.graphData = graphData\n  }\n}\n","<plotly-plot [data]=\"graphData\" [layout]=\"graphLayout\" [updateOnLayoutChange]=\"true\" [updateOnDataChange]=\"true\"></plotly-plot>\n```\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {map, of, Subject, tap} from \"rxjs\";\nimport {AccessionMap, AccessionMapQuery} from \"./accession-map\";\nimport {Sample, SampleQuery} from \"./sample\";\nimport {MSData, MSDataQuery} from \"./msdata\";\nimport {Modelling, ModelParameters, ModelParametersQuery} from \"./modelling-data\";\nimport {ToastService} from \"./toast.service\";\nimport {DataFrame, IDataFrame} from \"data-forge\";\nimport {Settings} from \"./settings\";\nimport {SequenceCoverage} from \"./sequence-coverage\";\nimport {environment} from \"../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebService {\n  settings: Settings = new Settings()\n  baseUrl = environment.baseUrl\n\n  redrawSubject: Subject<boolean> = new Subject<boolean>()\n  modelParameters: ModelParameters[] = []\n  selectionSubject: Subject<boolean> = new Subject<boolean>()\n  restoreSubject: Subject<boolean> = new Subject<boolean>()\n  filteredDF: IDataFrame<number, MSData> = new DataFrame()\n  initializeModelParameters: Subject<boolean> = new Subject<boolean>()\n  constructor(private http: HttpClient, private toastService: ToastService) { }\n\n  searchProtein(proteinGroup: string, distinct: boolean = true) {\n    if (proteinGroup === \"\") {\n      return of([])\n    }\n\n    const params: any =  {Protein_Group: proteinGroup}\n    if (distinct) {\n      params[\"distinct\"] = \"Protein_Group\"\n    }\n\n    return this.http.get<AccessionMapQuery>(`${this.baseUrl}/api/accessionmap/get_distinct/`, {params:params}).pipe(\n      map((data: AccessionMapQuery) => {return data.results.map((d: AccessionMap) => d.Protein_Group)})\n    )\n  }\n\n  typeAheadSearchTerm(term: string, searchType: string=\"Protein_Group\", distinct: boolean = true) {\n    if (term === \"\") {\n      return of([])\n    }\n    let params: any = {}\n\n    if (searchType === \"Protein_Group\") {\n      params =  {Protein_Group: term}\n      if (distinct) {\n        params[\"distinct\"] = \"Protein_Group\"\n      }\n    } else if (searchType === \"Genes\") {\n      params =  {Genes: term}\n      if (distinct) {\n        params[\"distinct\"] = \"Genes\"\n      }\n    } else {\n      return of([])\n    }\n    return this.http.get<string[]>(`${this.baseUrl}/api/accessionmap/get_distinct/`, {params:params})\n  }\n\n  getSampleMetadata() {\n    return this.http.get<SampleQuery>(`${this.baseUrl}/api/samplegroupmetadata/`, {responseType: 'json', observe: 'body', params: {page_size: \"60\"}}).pipe(\n      map((data: SampleQuery) => {return data.results})\n    )\n  }\n\n  getMSData(proteinGroup: string) {\n    this.toastService.show(\"Loading\", \"Loading MS data of \" + proteinGroup)\n    return this.http.get<MSData[]>(`${this.baseUrl}/api/turnoverdata/get_all_from_queryset/`, {responseType: 'json', observe: 'body', params: {Protein_Group: proteinGroup}}).pipe(tap((data: MSData[]) => {\n      this.toastService.show(\"Success\", \"Successfully retrieved MS data of \" + proteinGroup)\n    }),\n      map((data: MSData[]) => {return data})\n    )\n  }\n\n  postModellingData(tissue: string, engine: string, tau_POI: number, tau_POI_upper_bound: number, tau_POI_lower_bound: number, data: number[]|undefined = []) {\n    return this.http.post<any>(`${this.baseUrl}/api/modelling/`, {Tissue: tissue, Engine: engine, Data: data, tau_POI: tau_POI, tau_POI_upper_bound: tau_POI_upper_bound, tau_POI_lower_bound: tau_POI_lower_bound}, {responseType: 'json', observe: 'body'})\n  }\n\n  postModellingDataMass(ids: number[], data: number[]|undefined = []) {\n    return this.http.post<Modelling[]>(`${this.baseUrl}/api/turnoverdata/get_modelling_data/`, {Data: data, ids: ids}, {responseType: 'json', observe: 'body'})\n  }\n\n  getAllModelParameters() {\n    return this.http.get<ModelParametersQuery>(`${this.baseUrl}/api/modelparameters/`, {responseType: 'json', observe: 'body', params: {page_size: 100000}}).pipe(\n      map((data: ModelParametersQuery) => {return data.results})\n    )\n  }\n\n  selectionHandler(ids: number[]) {\n    const idsAdd = ids.filter((id) => {\n      return !this.settings.selectedMSDataID.includes(id)\n    })\n    if (idsAdd.length > 0) {\n      this.settings.selectedMSDataID.push(...idsAdd)\n    }\n    // const idsRemove = ids.filter((id) => {\n    //   return this.selectedMSDataID.includes(id)\n    // })\n    //\n    // if (idsRemove.length > 0) {\n    //   this.selectedMSDataID = this.selectedMSDataID.filter((id) => {\n    //     return !idsRemove.includes(id)\n    //   })\n    // }\n    // if (idsAdd.length > 0 || idsRemove.length > 0) {\n    //\n    // }\n    this.selectionSubject.next(true)\n    this.redrawSubject.next(true)\n  }\n\n  setOperationColor(precursorID: string, color: string = \"\") {\n    if (color === \"\") {\n      if (!(precursorID in this.settings.colorMap)) {\n        this.settings.colorMap[precursorID] = this.settings.defaultColorList[this.settings.currentColorPosition]\n        this.settings.currentColorPosition += 1\n        if (this.settings.currentColorPosition >= this.settings.defaultColorList.length) {\n          this.settings.currentColorPosition = 0\n        }\n      }\n    } else {\n      this.settings.colorMap[precursorID] = color\n    }\n  }\n\n  removeSearchOperation(operation: string) {\n    this.settings.searchOperations = this.settings.searchOperations.filter((op) => {\n      return op !== operation\n    })\n    delete this.settings.colorMap[operation]\n    for (const i in this.settings.searchMap) {\n      this.settings.searchMap[i] = this.settings.searchMap[i].filter((op: string) => {\n        return op !== operation\n      })\n      if (this.settings.searchMap[i].length === 0) {\n        delete this.settings.searchMap[i]\n        this.settings.selectedMSDataID = this.settings.selectedMSDataID.filter((id: number) => {\n          return id !== parseInt(i)\n        })\n      }\n    }\n  }\n\n  mergeSearchOperations(operations: string[], color: string=\"\", newOperationName: string = \"\", removeOld: boolean = true) {\n    if (operations.length > 1) {\n      if (newOperationName === \"\") {\n        newOperationName = operations.join(\"_\")\n      }\n      this.settings.searchOperations.push(newOperationName)\n      for (const i in this.settings.searchMap) {\n        let found = false\n        for (const j of operations) {\n            if (this.settings.searchMap[i].includes(j)) {\n              found = true\n              break\n            }\n        }\n        if (found) {\n            if (removeOld) {\n                this.settings.searchMap[i] = this.settings.searchMap[i].filter((op: string) => {\n                return !operations.includes(op)\n                })\n            }\n            this.settings.searchMap[i].push(newOperationName)\n        }\n      }\n      this.setOperationColor(newOperationName, color)\n    }\n    if (removeOld) {\n      for (const i of operations) {\n        delete this.settings.colorMap[i]\n      }\n    }\n  }\n\n  getCoverageData(proteinGroup: string, valid_tau: boolean = true) {\n    return this.http.get<SequenceCoverage>(`${this.baseUrl}/api/proteinsequence/get_coverage/`, {responseType: 'json', observe: 'body', params: {AccessionID: proteinGroup, valid_tau: valid_tau}}).pipe()\n  }\n\n  getExactAccFromGene(gene: string) {\n    return this.http.get<string[]>(`${this.baseUrl}/api/accessionmap/get_exact_accession_id_from_genes/`, {responseType: 'json', observe: 'body', params: {genes: gene}})\n  }\n}\n","export const environment = {\n  production: false,\n  baseUrl: \"http://localhost:8000\",\n  // baseUrl: \"http://\n};\n","/// <reference types=\"@angular/localize\" />\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["HttpHeaders","environment","AccountsService","constructor","http","token","loggedIn","baseUrl","login","username","password","headers","append","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn","RouterModule","ProteinViewComponent","HomeComponent","routes","path","component","redirectTo","pathMatch","AppRoutingModule","_3","forRoot","useHash","bindToComponentInputs","imports","exports","forkJoin","AppComponent","web","toastService","initialize","initializeModelParameters","asObservable","subscribe","data","getSampleMetadata","getAllModelParameters","show","s","settings","sampleMap","Sample_Name","modelParameters","error","ɵɵdirectiveInject","WebService","i2","ToastService","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement","BrowserModule","NgbModule","PlotlyJS","PlotlyModule","HTTP_INTERCEPTORS","HttpClientModule","ProteinSearchComponent","NavbarComponent","FormsModule","ReactiveFormsModule","ScatterTimePlotComponent","ProteinViewPeptideContainerComponent","ProteinViewScatterHVsLComponent","ProteinViewTissueBasedComponent","ProteinViewPeptideCollectionComponent","ViolinTimePlotComponent","ProteinModellingCollectionComponent","ProteinModellingComponent","ProteinTauDistributionComponent","ProteinTauCollectionComponent","ToastComponent","FloatingPanelsComponent","NgxColorsModule","MergePromptComponent","BrowserAnimationsModule","CoveragePlotComponent","VariantSelectorComponent","AuthInterceptor","plotlyjs","AppModule","bootstrap","provide","useClass","multi","declarations","accounts","intercept","request","next","url","endsWith","clone","setHeaders","Authorization","console","log","handle","DataFrame","FormControl","Validators","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","tissue_r3","ɵɵadvance","ɵɵtextInterpolate","ctx_r2","revision","graphDataMap","e_r4","graphLayoutMap","coverageData","value","_coverageData","df","Object","values","turnover_data","tissues","getSeries","distinct","toArray","form","controls","setValue","updateDisplay","fb","undefined","displayDF","engines","iscollapse","graphData","graphLayout","title","autosize","width","hovermode","xaxis","range","showticklabels","showgrid","zeroline","visible","yaxis","type","fixedrange","shapes","group","required","valid_tau","selected_only","valueChanges","redrawSubject","drawCoveragePlot","count","groupBy","row","Engine","forEach","JSON","parse","stringify","first","heightMap","dataMap","lineShapeFromData","x0","y0","x1","protein_sequence","length","y1","line","color","push","orderByDescending","Stripped_Sequence","bake","previousHeight","i","coverage","includes","id","highest","x","y","parseInt","lineShape","searchMap","colorMap","slice","where","Tissue","tau_POI","selectedMSDataID","FormBuilder","inputs","consts","CoveragePlotComponent_Template","ɵɵlistener","CoveragePlotComponent_Template_button_click_3_listener","CoveragePlotComponent_Template_div_ngbCollapseChange_5_listener","$event","ɵɵtemplate","CoveragePlotComponent_option_13_Template","CoveragePlotComponent_plotly_plot_22_Template","ɵɵpureFunction1","_c0","debounceTime","distinctUntilChanged","map","FloatingPanelsComponent_div_1_div_23_div_6_Template_input_change_3_listener","restoredCtx","ɵɵrestoreView","_r6","l_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","updateSelected","FloatingPanelsComponent_div_1_div_23_div_6_Template_ngx_colors_ngModelChange_4_listener","ctx_r7","ctx_r3","ɵɵpureFunction0","FloatingPanelsComponent_div_1_div_23_div_6_Template","FloatingPanelsComponent_div_1_div_23_Template_button_click_9_listener","_r9","ctx_r8","updateColorMap","FloatingPanelsComponent_div_1_div_23_Template_button_click_11_listener","ctx_r10","mergeSelected","FloatingPanelsComponent_div_1_div_23_Template_button_click_13_listener","ctx_r11","removeSelected","legends","ɵɵtextInterpolate1","selected","FloatingPanelsComponent_div_1_Template_input_ngModelChange_7_listener","_r13","ctx_r12","validTau","FloatingPanelsComponent_div_1_Template_input_change_7_listener","ctx_r14","updateParams","FloatingPanelsComponent_div_1_Template_input_ngModelChange_11_listener","ctx_r15","typeaheadModel","FloatingPanelsComponent_div_1_Template_select_ngModelChange_15_listener","ctx_r16","searchBy","FloatingPanelsComponent_div_1_Template_button_click_21_listener","ctx_r17","matchSearch","FloatingPanelsComponent_div_1_div_23_Template","ctx_r1","search","filteredDF","_filteredDF","precursorList","sequenceList","togglePanels","panelOpenState","modal","keys","assign","text$","pipe","term","filter","v","toLowerCase","indexOf","selectionSubject","l","addControl","e","splice","ref","open","closed","result","mergeSearchOperations","name","remove","removeSearchOperation","reset","ids","setOperationColor","searchOperations","selectionHandler","i3","NgbModal","FloatingPanelsComponent_Template","FloatingPanelsComponent_div_0_Template","FloatingPanelsComponent_div_1_Template","FloatingPanelsComponent_Template_button_click_5_listener","HomeComponent_div_0_Template_form_ngSubmit_5_listener","_r2","loginHandler","HomeComponent_div_0_Template_button_click_15_listener","ctx_r0","toast","valid","i4","HomeComponent_Template","HomeComponent_div_0_Template","save","close","cancel","dismiss","NgbActiveModal","MergePromptComponent_Template","MergePromptComponent_Template_button_click_15_listener","MergePromptComponent_Template_button_click_17_listener","catchError","of","switchMap","tap","NavbarComponent_form_5_Template_form_ngSubmit_0_listener","_r5","ctx_r4","searchData","NavbarComponent_form_5_Template_input_ngModelChange_1_listener","ctx_r6","proteinSearchModel","NavbarComponent_form_5_Template_select_ngModelChange_3_listener","searchType","ɵɵclassProp","searchFailed","resultFormatter","r_r8","t_r9","split","router","searching","typeAheadSearchTerm","position","start","Math","max","end","min","substring","navigate","then","r","getExactAccFromGene","componentInstance","download","loadSettingFromFile","event","target","files","file","reader","FileReader","onload","import","restoreSubject","readAsText","Router","i5","NavbarComponent_Template","NavbarComponent_form_5_Template","NavbarComponent_Template_button_click_11_listener","NavbarComponent_Template_button_click_13_listener","_r10","_r1","ɵɵreference","click","NavbarComponent_Template_input_change_15_listener","NavbarComponent_ng_template_17_Template","ɵɵtemplateRefExtractor","Series","t_r3","t_r5","hideNotSelected","ProteinModellingCollectionComponent_div_19_div_1_Template","groupData","_data","updateGroupData","selectedTissues","ProteinModellingCollectionComponent_Template","ProteinModellingCollectionComponent_Template_button_click_3_listener","ProteinModellingCollectionComponent_Template_div_ngbCollapseChange_5_listener","ProteinModellingCollectionComponent_option_14_Template","ProteinModellingCollectionComponent_div_19_Template","ProteinModellingComponent_div_0_div_5_Template_plotly_plot_plotlyClick_1_listener","_r4","OnClick","e_r2","ProteinModellingComponent_div_0_div_5_Template","_hideNotSelected","drawModel","toasts","annotations","font","family","model","temp","k_pool","day","mode","shape","showlegend","hovertemplate","tau_model","Precursor_Id","precursorIds","points","ProteinModellingComponent_Template","ProteinModellingComponent_div_0_Template","EventEmitter","o_r3","o_r4","o_r5","ɵɵtextInterpolate4","Sample_Label","Days","Replicate","samples","sort","formExperimentParameters","selectedSamples","reloadData","proteotypic","minSamplesDetected","minTimepointsDetected","filteredData","patchValue","n_Samples","n_TimePoints","checkIfDataIsDetectedInSelectedSamples","Proteotypic","emit","updateSelection","Sample_H_over_HL","outputs","ProteinSearchComponent_Template","ProteinSearchComponent_option_11_Template","ProteinSearchComponent_option_16_Template","ProteinSearchComponent_Template_button_click_31_listener","ProteinSearchComponent_Template_button_click_33_listener","ProteinSearchComponent_option_45_Template","ProteinSearchComponent_Template_button_click_49_listener","g_r5","ProteinTauCollectionComponent_div_8_div_1_Template","tissueGroupData","ProteinTauCollectionComponent_ng_template_9_app_protein_tau_distribution_0_Template","combinedPlot","ProteinTauCollectionComponent_Template","ProteinTauCollectionComponent_Template_button_click_3_listener","ProteinTauCollectionComponent_Template_div_ngbCollapseChange_5_listener","ProteinTauCollectionComponent_div_8_Template","ProteinTauCollectionComponent_ng_template_9_Template","ProteinTauDistributionComponent_div_7_Template_plotly_plot_plotlyClick_1_listener","_r3","e_r1","drawGraph","graphLayoutBase","tickmode","engineList","text","boxpoints","jitter","pointpos","marker","fillcolor","log2","engine","tissue","selectedData","point","pointNumber","updatePlot","ProteinTauDistributionComponent_Template","ProteinTauDistributionComponent_Template_form_ngSubmit_0_listener","ProteinTauDistributionComponent_div_7_Template","ProteinViewPeptideCollectionComponent_ng_template_18_li_0_Template_input_keyup_enter_4_listener","_r8","selectPage","ProteinViewPeptideCollectionComponent_ng_template_18_li_0_Template_input_blur_4_listener","ctx_r9","ProteinViewPeptideCollectionComponent_ng_template_18_li_0_Template_input_input_4_listener","formatInput","page_r3","pages_r4","ProteinViewPeptideCollectionComponent_ng_template_18_li_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","r_r12","ProteinViewPeptideCollectionComponent_ng_template_22_li_0_Template_input_keyup_enter_4_listener","_r18","_r16","ProteinViewPeptideCollectionComponent_ng_template_22_li_0_Template_input_blur_4_listener","ctx_r19","ProteinViewPeptideCollectionComponent_ng_template_22_li_0_Template_input_input_4_listener","ctx_r20","page_r13","pages_r14","ProteinViewPeptideCollectionComponent_ng_template_22_li_0_Template","validTAUPOI","precursorID","page","pageSize","filterPrecursorID","FILTER_PAG_REGEX","toUpperCase","input","replace","ProteinViewPeptideCollectionComponent_Template","ProteinViewPeptideCollectionComponent_Template_ngb_pagination_pageChange_17_listener","ProteinViewPeptideCollectionComponent_ng_template_18_Template","ProteinViewPeptideCollectionComponent_ng_container_19_Template","ProteinViewPeptideCollectionComponent_Template_ngb_pagination_pageChange_21_listener","ProteinViewPeptideCollectionComponent_ng_template_22_Template","ɵɵpipeBind3","ProteinViewPeptideContainerComponent_div_0_b_5_Template","ProteinViewPeptideContainerComponent_div_0_ng_template_6_Template","tau_POI_range","tau_POI_range_relative","tau_POI_lower_bound","tau_POI_upper_bound","HalfLife_POI","HalfLife_POI_range","HalfLife_POI_range_relative","HalfLife_POI_lower_bound","HalfLife_POI_upper_bound","rss","AverageRSS","ProteinViewPeptideContainerComponent_Template","ProteinViewPeptideContainerComponent_div_0_Template","tissueName","size","SampleH","SampleL","ProteinViewScatterHVsLComponent_Template","ProteinViewTissueBasedComponent_div_8_div_1_Template","ProteinViewTissueBasedComponent_Template","ProteinViewTissueBasedComponent_Template_button_click_3_listener","ProteinViewTissueBasedComponent_Template_div_ngbCollapseChange_5_listener","ProteinViewTissueBasedComponent_div_8_Template","modellingDataGroup","proteinGroup","protein","getMSData","getCoverageData","modellingData","handlerFilterDFUpdate","days","ProteinViewComponent_Template","ProteinViewComponent_Template_app_protein_search_filteredData_6_listener","ProteinViewComponent_div_7_Template","ProteinViewComponent_div_8_Template","ProteinViewComponent_div_9_Template","ProteinViewComponent_div_10_Template","ProteinViewComponent_ng_template_12_Template","ProteinViewComponent_ng_template_14_Template","_this","_asyncToGenerator","daysMap","a","b","modelResult","pulseModel","uppderBound","lowerBound","ScatterTimePlotComponent_Template","Settings","currentColorPosition","defaultColorList","export","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","removeChild","header","delay","t","ToastComponent_ngb_toast_0_Template_ngb_toast_hidden_0_listener","toast_r1","ToastComponent_ngb_toast_0_Template_button_click_7_listener","ToastComponent_Template","ToastComponent_ngb_toast_0_Template","d_r1","submit","VariantSelectorComponent_Template","VariantSelectorComponent_Template_select_ngModelChange_8_listener","VariantSelectorComponent_option_9_Template","VariantSelectorComponent_Template_button_click_11_listener","VariantSelectorComponent_Template_button_click_13_listener","tickvals","ticktext","box","spanmode","meanline","ViolinTimePlotComponent_Template","Subject","searchProtein","params","Protein_Group","get","results","d","Genes","responseType","observe","page_size","postModellingData","Data","postModellingDataMass","idsAdd","operation","op","operations","newOperationName","removeOld","join","found","j","AccessionID","gene","genes","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}